{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Component/Camera.ts","src/Component/CameraController.ts","src/Component/Component.ts","src/Component/MeshRenderer.ts","src/Component/ObjRotate.ts","src/Component/Renderer.ts","src/Core/Engine.ts","src/Core/GameObject.ts","src/Core/Input.ts","src/Core/Time.ts","src/Core/Transform.ts","src/Math/Bounds.ts","src/Math/Matrix4x4.ts","src/Math/Quaternion.ts","src/Math/Vector2.ts","src/Math/Vector3.ts","src/Math/Vector4.ts","src/Renderer/Mesh.ts","src/Renderer/RasterizationPipeline.ts","src/Scene/MainScene.ts","src/Scene/Scene.ts","src/Scene/SceneManager.ts","src/Utils/AssetLoader.ts","src/Utils/Color.ts","src/Utils/Dictionary.ts","src/Utils/Logger.ts","src/Utils/ObjParser.ts","src/index.ts"],"names":[],"mappings":"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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,C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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { Color } from \"../Utils/Color\";\r\nimport { EngineConfig } from \"../Core/Engine\";\r\nimport { Vector4 } from \"../Math/Vector4\";\r\nimport { Component } from \"./Component\";\r\nimport { Matrix4x4 } from \"../Math/Matrix4x4\";\r\nimport { Time } from \"../Core/Time\";\r\n\r\nexport enum CameraClearFlags {\r\n    NONE = 0,\r\n    ALL = 16384 | 256,\r\n    Color = 16384,  //gl.COLOR_BUFFER_BIT\r\n    Depth = 256,    //gl.DEPTH_BUFFER_BIT\r\n}\r\n\r\nexport class Camera extends Component {\r\n    public static mainCamera: Camera;\r\n    private static cameras: Array<Camera> = new Array<Camera>();\r\n\r\n    public backGroundColor: Color = new Color(0.27, 0.27, 0.27, 1.0);\r\n    public fogColor: Color = new Color(0.27, 0.27, 0.27, 1.0);\r\n    public clearFlags: CameraClearFlags = CameraClearFlags.Color | CameraClearFlags.Depth;\r\n    public nearClip: number = 1;\r\n    public farClip: number = 128;\r\n    public fov: number = 60;\r\n    public depth: number = 0;\r\n    public viewPort: Vector4 = new Vector4(0, 0, 1, 1);\r\n\r\n    public get aspect(): number {\r\n        var v = this.viewPort;\r\n        return (v.z * EngineConfig.canvasWidth) / (v.w * EngineConfig.canvasHeight);\r\n    }\r\n\r\n    public awake(): void {\r\n        if (Camera.mainCamera == null) {\r\n            Camera.mainCamera = this;\r\n        }\r\n        Camera.cameras.push(this);\r\n        this.transform.forward;\r\n    }\r\n    \r\n    private timer:number = 0;\r\n    public counter:number = 0;\r\n    public update(): void {\r\n        if(Time.time - this.timer >= 1){\r\n            this.timer = Time.time;\r\n            this.counter++;\r\n        }\r\n    }\r\n\r\n    public onDestroy() {\r\n        var index = Camera.cameras.indexOf(this, 0);\r\n        if (index > -1) {\r\n            Camera.cameras.splice(index, 1);\r\n        }\r\n\r\n        if (Camera.mainCamera == this) {\r\n            if (Camera.cameras.length > 0)\r\n                Camera.mainCamera = Camera.cameras[0];\r\n            else\r\n                Camera.mainCamera = undefined as unknown as Camera;\r\n        }\r\n    }\r\n\r\n    public getViewMatrix(): Matrix4x4 {\r\n        // 1. 获取相机的世界变换矩阵\r\n        const worldMatrix = this.transform.localToWorldMatrix;\r\n        // 2. 计算逆矩阵（世界空间 → 视图空间）\r\n        const viewMatrix = worldMatrix.clone().invert();\r\n        return viewMatrix;\r\n    }\r\n\r\n    public getProjectionMatrix(): Matrix4x4 {\r\n        return Matrix4x4.perspective(this.fov, this.aspect, this.nearClip, this.farClip);\r\n    }\r\n}","import { Engine } from \"../Core/Engine\";\r\nimport { Input, InputAxis } from \"../Core/Input\";\r\nimport { Time } from \"../Core/Time\";\r\nimport { Quaternion } from \"../Math/Quaternion\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport class CameraController extends Component {\r\n    public moveSpeed = 0.5;\r\n    public moveSpeedShiftScale = 2.5;\r\n    public dragSpeed = 0.3;\r\n    public damp = 0.2;\r\n    public rotateSpeed = 1;\r\n\r\n    private _euler = new Vector3();\r\n    private _velocity = new Vector3();\r\n    private _position = new Vector3();\r\n    private _speedScale = 1;\r\n    private _rotateCamera = false;\r\n\r\n    start() {\r\n        this._euler = this.transform.rotation.eulerAngles;\r\n        this._position = this.transform.position;\r\n    }\r\n\r\n    updateInput() {\r\n        // WSADQE+SHIFT相机移动以及加速\r\n        this._velocity.x = -Input.GetAxis(InputAxis.Horizontal);\r\n        this._velocity.z = Input.GetAxis(InputAxis.Vertical);\r\n        this._velocity.y = Input.GetKey(Input.KeyCode.Q) ? -1 : Input.GetKey(Input.KeyCode.E) ? 1 : 0;\r\n        this._speedScale = Input.GetKey(Input.KeyCode.Shift) ? this.moveSpeedShiftScale : 1;\r\n\r\n        // 鼠标中键相机拖动\r\n        if (Input.GetMouseButton(1)) {\r\n            const moveDelta = Input.mouseDelta;\r\n            //TODO:这里应该是托多少就移动多少，而不是乘一个系数\r\n            this._velocity.x += moveDelta.x * this.dragSpeed;\r\n            this._velocity.y += moveDelta.y * this.dragSpeed;\r\n        }\r\n\r\n        // 鼠标滚轮相机缩放\r\n        const scrollDelta = Input.mouseScrollDelta.y * this.moveSpeed * 0.1;\r\n        var pos = this.transform.rotation.transformQuat(Vector3.BACK);\r\n        this._position = this.scaleAndAdd(this.transform.position, pos, scrollDelta);\r\n\r\n        // 鼠标右键相机旋转\r\n        if (Input.GetMouseButtonDown(2)) {\r\n            Engine.canvas.requestPointerLock();\r\n            this._rotateCamera = true;\r\n        }\r\n        if (Input.GetMouseButtonUp(2)) {\r\n            if (document.exitPointerLock) document.exitPointerLock();\r\n            this._rotateCamera = false;\r\n        }\r\n        if (this._rotateCamera) {\r\n            const moveDelta = Input.mouseDelta;\r\n            this._euler.y += moveDelta.x * this.rotateSpeed * 0.1;\r\n            this._euler.x += moveDelta.y * this.rotateSpeed * 0.1;\r\n        }\r\n\r\n        // ALT+鼠标左键相机绕中心点旋转\r\n        if (Input.GetKey(Input.KeyCode.Alt) && Input.GetMouseButton(0)) {\r\n            const moveDelta = Input.mouseDelta;\r\n            this._euler.y -= moveDelta.x * this.rotateSpeed * 0.1;\r\n            this._euler.x += moveDelta.y * this.rotateSpeed * 0.1;\r\n        }\r\n    }\r\n\r\n    scaleAndAdd(a: Vector3, b: Vector3, scale: number): Vector3 {\r\n        var out = new Vector3();\r\n        out.x = a.x + b.x * scale;\r\n        out.y = a.y + b.y * scale;\r\n        out.z = a.z + b.z * scale;\r\n        return out;\r\n    }\r\n\r\n    update() {\r\n        this.updateInput();\r\n\r\n        // position\r\n        var v = this.transform.rotation.transformQuat(this._velocity);\r\n        this._position = this.scaleAndAdd(this._position, v, this.moveSpeed * this._speedScale);\r\n        v = Vector3.lerp(this.transform.position, this._position, Time.deltaTime / this.damp);\r\n        this.transform.position = v;\r\n\r\n        // rotation\r\n        var q = new Quaternion(new Vector3(this._euler.x, this._euler.y, this._euler.z));\r\n        q = Quaternion.slerp(this.transform.rotation, q, Time.deltaTime / this.damp);\r\n        this.transform.rotation = q;\r\n    }\r\n}","import { GameObject } from \"../Core/GameObject\";\r\nimport { Transform } from \"../Core/Transform\";\r\n\r\nexport abstract class Component {\r\n    public readonly gameObject: GameObject;\r\n    \r\n    public get transform(): Transform {\r\n        return this.gameObject.transform;\r\n    }\r\n    \r\n    private _enabled: boolean = true;\r\n    public get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n    public set enabled(value: boolean) {\r\n        this._enabled = value;\r\n        if (value) {\r\n            this.onEnable();\r\n        } else {\r\n            this.onDisable();\r\n        }\r\n    }\r\n\r\n    constructor(gameObject: GameObject) {\r\n        this.gameObject = gameObject;\r\n        this.awake();\r\n    }\r\n\r\n    // 生命周期方法\r\n    // 当组件被创建时调用\r\n    public awake(): void {}\r\n    \r\n    // 在启用组件的第一帧调用\r\n    public start(): void {}\r\n    \r\n    // 每帧更新前调用\r\n    public update(): void {}\r\n    \r\n    // 每帧更新后调用\r\n    //public lateUpdate(): void {}\r\n    \r\n    // 当组件被启用时调用\r\n    public onEnable(): void {}\r\n    \r\n    // 当组件被禁用时调用\r\n    public onDisable(): void {}\r\n    \r\n    // 当组件被销毁时调用\r\n    public onDestroy(): void {}\r\n}","import { Renderer } from \"./Renderer\";\r\nimport { Mesh } from \"../Renderer/Mesh\";\r\n\r\nexport class MeshRenderer extends Renderer {\r\n    private _mesh: Mesh | null = null;\r\n\r\n    // 网格属性\r\n    public get mesh(): Mesh | null {\r\n        return this._mesh;\r\n    }\r\n\r\n    public set mesh(value: Mesh | null) {\r\n        this._mesh = value;\r\n    }\r\n    \r\n    // 实现渲染方法\r\n    public render(): void {\r\n        // 渲染逻辑将由RasterizationPipeline调用\r\n    }\r\n\r\n    public onDestroy(): void {\r\n        super.onDestroy();\r\n        // 清理资源\r\n        this._mesh = null;\r\n    }\r\n}","import { Quaternion } from \"../Math/Quaternion\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport class ObjRotate extends Component {\r\n    private angleX = 0;\r\n    private angleY = 0;\r\n\r\n    public update(): void {\r\n        // // 键盘输入\r\n        // const horizontalInput = Input.GetAxis(InputAxis.Horizontal);\r\n        // const verticalInput = Input.GetAxis(InputAxis.Vertical);\r\n        // this.angleX += verticalInput;\r\n        // this.angleY += horizontalInput;\r\n        // this.transform.rotation = new Quaternion(new Vector3(this.angleX, this.angleY, 0));\r\n\r\n        // // 鼠标滚轮\r\n        // if (Input.mouseScrollDelta.y !== 0) {\r\n        //     // 缩放\r\n        //     const zoomFactor = Input.mouseScrollDelta.y > 0 ? 0.9 : 1.1;\r\n        //     const sacle = this.transform.scale;\r\n        //     sacle.multiply(zoomFactor);\r\n        //     this.transform.scale = sacle;\r\n        // }\r\n\r\n        this.transform.rotation = new Quaternion(new Vector3(this.angleX, this.angleY, 0));\r\n        this.angleX += 1;\r\n        this.angleY += 1;\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Material } from \"../Renderer/Material\";\r\nimport { Bounds } from \"../Math/Bounds\";\r\n\r\n// Renderer是所有渲染组件的基类\r\nexport abstract class Renderer extends Component {\r\n    private _bounds: Bounds = new Bounds();\r\n    private _material: Material | null = null;\r\n    private _sortingLayerID: number = 0;\r\n    private _sortingOrder: number = 0;\r\n    private _castShadows: boolean = true;\r\n    private _receiveShadows: boolean = true;\r\n\r\n    // 材质属性\r\n    public get material(): Material | null {\r\n        return this._material;\r\n    }\r\n    \r\n    public set material(value: Material | null) {\r\n        this._material = value;\r\n    }\r\n    \r\n    // 排序层ID\r\n    public get sortingLayerID(): number {\r\n        return this._sortingLayerID;\r\n    }\r\n    \r\n    public set sortingLayerID(value: number) {\r\n        this._sortingLayerID = value;\r\n    }\r\n    \r\n    // 排序顺序\r\n    public get sortingOrder(): number {\r\n        return this._sortingOrder;\r\n    }\r\n    \r\n    public set sortingOrder(value: number) {\r\n        this._sortingOrder = value;\r\n    }\r\n\r\n    // 是否投射阴影\r\n    public get castShadows(): boolean {\r\n        return this._castShadows;\r\n    }\r\n\r\n    public set castShadows(value: boolean) {\r\n        this._castShadows = value;\r\n    }\r\n\r\n    // 是否接收阴影\r\n    public get receiveShadows(): boolean {\r\n        return this._receiveShadows;\r\n    }\r\n\r\n    public set receiveShadows(value: boolean) {\r\n        this._receiveShadows = value;\r\n    }\r\n    \r\n    // 是否应该被渲染\r\n    public get shouldRender(): boolean {\r\n        return this.enabled && this.gameObject.active;\r\n    }\r\n    \r\n    // 渲染方法，子类需要实现\r\n    public abstract render(): void;\r\n\r\n    public onDestroy(): void {\r\n        // 清理资源\r\n        this._material = null;\r\n    }\r\n}","import { Input } from \"./Input\";\r\nimport { RasterizationPipeline } from \"../Renderer/RasterizationPipeline\";\r\nimport { MainScene } from \"../Scene/MainScene\";\r\nimport { SceneManager } from \"../Scene/SceneManager\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport { Time } from \"./Time\";\r\n\r\nexport class Engine {\r\n    public static sceneManager: SceneManager = new SceneManager();\r\n    public static canvas: HTMLCanvasElement;\r\n    public static context: CanvasRenderingContext2D;\r\n    public static pipeline: RasterizationPipeline;\r\n    public static imageData: ImageData;\r\n\r\n    public static Init() {\r\n        // 获取canvas元素和2D渲染上下文\r\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        // 设置canvas尺寸\r\n        this.canvas.width = EngineConfig.canvasWidth;\r\n        this.canvas.height = EngineConfig.canvasHeight;\r\n        // 设置文本样式\r\n        this.context.font = 'Arial';\r\n        this.context.textAlign = 'left';\r\n\r\n        // 创建图像数据对象\r\n        this.imageData = Engine.context.createImageData(EngineConfig.canvasWidth, EngineConfig.canvasHeight);\r\n        // 创建32位无符号整型数组视图，用于直接操作像素数据\r\n        const uint32View = new Uint32Array(this.imageData.data.buffer);\r\n        // 创建渲染器实例\r\n        this.pipeline = new RasterizationPipeline(uint32View);\r\n\r\n        // 初始化场景\r\n        this.sceneManager.loadScene(MainScene);\r\n        // 初始化输入系统\r\n        Input.initialize();\r\n    }\r\n\r\n    public static Loop() {\r\n        Logger.log(Math.floor(1 / Time.deltaTime).toString());\r\n\r\n        // 1. 更新时间数据：判断当前帧是否需要执行（受 maxFps 影响）\r\n        const shouldExecuteFrame = Time.updateFrame();\r\n        // if (!shouldExecuteFrame) {\r\n        //     return;\r\n        // }\r\n\r\n        // 2. 固定更新（对应 Unity FixedUpdate，例如物理引擎、AI逻辑）\r\n        Time.updateFixedTime(() => {\r\n            Engine.FixedUpdate(); // 你的固定逻辑更新（如物理碰撞、技能CD）\r\n        });\r\n\r\n        // 3. 普通逻辑更新（对应 Unity Update，受 deltaTime 影响）\r\n        Engine.Update(); // 例如：角色移动（速度 * Time.deltaTime 确保帧率无关）\r\n\r\n        // 4. 更新输入状态(注：输入已经由WEB引擎在每帧开始之前获取了，这里是更新输入的上一帧状态)\r\n        Input.update();\r\n\r\n        // 5. 渲染\r\n        Engine.Render();\r\n\r\n        // 6. 屏幕输出日志\r\n        Logger.printLogs();\r\n    }\r\n\r\n    private static Update() {\r\n        // 使用场景的update方法更新所有游戏对象\r\n        this.sceneManager.getActiveScene()?.update();\r\n    }\r\n\r\n    private static FixedUpdate() {\r\n    }\r\n\r\n    private static Render() {\r\n        this.pipeline.Render();\r\n        // 将图像数据绘制到canvas上\r\n        this.context.putImageData(this.imageData, 0, 0);\r\n    }\r\n}\r\n\r\nexport class EngineConfig {\r\n    public static canvasWidth: number = 400;\r\n    public static canvasHeight: number = 400;\r\n    public static halfCanvasWidth: number = EngineConfig.canvasWidth >> 1;\r\n    public static halfCanvasHeight: number = EngineConfig.canvasHeight >> 1;\r\n    public static aspectRatio: number = EngineConfig.canvasWidth / EngineConfig.canvasHeight;\r\n}","import { Transform } from \"./Transform\";\r\nimport { Component } from \"../Component/Component\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Quaternion } from \"../Math/Quaternion\";\r\n\r\nexport class GameObject {\r\n    public name: string;\r\n    public transform: Transform;\r\n    public tag: string = \"Untagged\"; // 添加标签属性\r\n    public layer: number = 0; // 默认层\r\n\r\n    private components: Component[] = [];\r\n    private startedComponents: Set<Component> = new Set<Component>();\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.transform = new Transform(this);\r\n    }\r\n\r\n    private _active: boolean = true;\r\n    // 设置游戏对象的激活状态\r\n    public set active(value: boolean) {\r\n        if (this._active !== value) {\r\n            this._active = value;\r\n\r\n            // 处理组件的启用/禁用\r\n            for (const component of this.components) {\r\n                if (value) {\r\n                    component.onEnable();\r\n                } else {\r\n                    component.onDisable();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 检查游戏对象是否处于活动状态（考虑父对象）\r\n    public get active(): boolean {\r\n        if (!this._active) return false;\r\n\r\n        // 检查父对象的激活状态\r\n        let parent = this.transform.parent;\r\n        while (parent) {\r\n            const parentGameObject = parent.gameObject;\r\n            if (parentGameObject && !parentGameObject.active) {\r\n                return false;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // 调用所有组件的Start方法（如果尚未调用）\r\n    public startComponents(): void {\r\n        if (!this.active) return;\r\n\r\n        for (const component of this.components) {\r\n            if (!this.startedComponents.has(component) && component.enabled) {\r\n                component.start();\r\n                this.startedComponents.add(component);\r\n            }\r\n        }\r\n\r\n        // 递归调用子对象的startComponents\r\n        for (const child of this.transform.children) {\r\n            if (child.gameObject) {\r\n                child.gameObject.startComponents();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 更新所有组件\r\n    public updateComponents(): void {\r\n        if (!this.active) return;\r\n\r\n        for (const component of this.components) {\r\n            if (component.enabled) {\r\n                component.update();\r\n            }\r\n        }\r\n\r\n        // 递归调用子对象的updateComponents\r\n        for (const child of this.transform.children) {\r\n            if (child.gameObject) {\r\n                child.gameObject.updateComponents();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加组件\r\n    public addComponent<T extends Component>(componentType: { new(gameObject: GameObject): T }): T {\r\n        var comp = this.getComponent(componentType);\r\n        if (comp == null) {\r\n            comp = new componentType(this);\r\n            this.components.push(comp);\r\n        }\r\n        return comp;\r\n    }\r\n\r\n    // 获取指定类型的组件\r\n    public getComponent<T extends Component>(componentType: Function & { prototype: T }): T | null {\r\n        for (const component of this.components) {\r\n            if (component instanceof componentType) {\r\n                return component as T;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // 获取所有指定类型的组件\r\n    public getComponents<T extends Component>(componentType: Function & { prototype: T }): T[] {\r\n        const result: T[] = [];\r\n        for (const component of this.components) {\r\n            if (component instanceof componentType) {\r\n                result.push(component as T);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // 获取子节点上的组件\r\n    public getComponentInChildren<T extends Component>(componentType: Function & { prototype: T }): T | null {\r\n        // 先检查自身\r\n        const comp = this.getComponent(componentType);\r\n        if (comp != null) {\r\n            return comp;\r\n        }\r\n\r\n        // 遍历所有子节点\r\n        for (const child of this.transform.children) {\r\n            const childGameObject = child.gameObject;\r\n            if (childGameObject) {\r\n                const childComp = childGameObject.getComponent(componentType);\r\n                if (childComp != null) {\r\n                    return childComp;\r\n                }\r\n\r\n                // 递归检查子节点的子节点\r\n                const deepChildComp = childGameObject.getComponentInChildren(componentType);\r\n                if (deepChildComp != null) {\r\n                    return deepChildComp;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // 获取子节点上的所有组件\r\n    public getComponentsInChildren<T extends Component>(componentType: Function & { prototype: T }): T[] {\r\n        const result: T[] = [];\r\n\r\n        // 添加自身的组件\r\n        result.push(...this.getComponents(componentType));\r\n\r\n        // 遍历所有子节点\r\n        for (const child of this.transform.children) {\r\n            // 假设每个Transform都有对应的GameObject\r\n            const childGameObject = child.gameObject;\r\n            if (childGameObject) {\r\n                // 递归获取子节点的所有组件\r\n                result.push(...childGameObject.getComponentsInChildren(componentType));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 移除组件\r\n    public removeComponent<T extends Component>(componentType: Function & { prototype: T }): boolean {\r\n        const index = this.components.findIndex(component => component instanceof componentType);\r\n        if (index !== -1) {\r\n            const component = this.components[index];\r\n            component.onDestroy();\r\n            this.components.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 静态方法：通过名称查找GameObject\r\n    public static find(name: string): GameObject | null {\r\n        // 实现查找逻辑\r\n        // 这需要一个全局的GameObject注册表\r\n        return null;\r\n    }\r\n\r\n    // 静态方法：通过标签查找第一个GameObject\r\n    public static findWithTag(tag: string): GameObject | null {\r\n        // 实现查找逻辑\r\n        // 这需要一个标签系统\r\n        return null;\r\n    }\r\n\r\n    // 静态方法：通过标签查找所有GameObject\r\n    public static findGameObjectsWithTag(tag: string): GameObject[] {\r\n        // 实现查找逻辑\r\n        return [];\r\n    }\r\n\r\n    // 静态方法：查找特定类型的第一个组件\r\n    public static findObjectOfType<T extends Component>(type: new (...args: any[]) => T): T | null {\r\n        // 实现查找逻辑\r\n        return null;\r\n    }\r\n\r\n    // 静态方法：查找特定类型的所有组件\r\n    public static findObjectsOfType<T extends Component>(type: new (...args: any[]) => T): T[] {\r\n        // 实现查找逻辑\r\n        return [];\r\n    }\r\n\r\n    // 静态方法：实例化游戏对象\r\n    public static instantiate(original: GameObject, position?: Vector3, rotation?: Quaternion): GameObject {\r\n        // 创建新的游戏对象\r\n        const clone = new GameObject(original.name);\r\n\r\n        // 复制属性\r\n        clone.tag = original.tag;\r\n        clone.layer = original.layer;\r\n        clone.active = original.active;\r\n\r\n        // 设置位置和旋转（如果提供）\r\n        if (position) {\r\n            clone.transform.position = position;\r\n        }\r\n\r\n        if (rotation) {\r\n            clone.transform.rotation = rotation;\r\n        }\r\n\r\n        // 复制组件（这需要一个深度复制机制）\r\n\r\n        return clone;\r\n    }\r\n\r\n    // 销毁游戏对象\r\n    public destroy(): void {\r\n        // 调用所有组件的onDestroy方法\r\n        for (const component of this.components) {\r\n            component.onDestroy();\r\n        }\r\n        // 这里可以添加从场景中移除游戏对象的逻辑\r\n    }\r\n}","import { Vector2 } from \"../Math/Vector2\";\r\n\r\nexport class Input {\r\n    // 键盘状态\r\n    private static currentKeys: Map<string, boolean> = new Map<string, boolean>();\r\n    private static previousKeys: Map<string, boolean> = new Map<string, boolean>();\r\n\r\n    // 鼠标状态\r\n    private static currentMouseButtons: boolean[] = [false, false, false]; // 左、中、右键\r\n    private static previousMouseButtons: boolean[] = [false, false, false];\r\n    public static mousePosition: Vector2 = Vector2.ZERO;\r\n    public static mouseDelta: Vector2 = Vector2.ZERO;\r\n    public static mouseScrollDelta: Vector2 = Vector2.ZERO;\r\n\r\n    // 触摸状态\r\n    private static touches: Touch[] = [];\r\n\r\n    // 按键常量\r\n    public static readonly KeyCode = {\r\n        // 字母键\r\n        A: 'KeyA', B: 'KeyB', C: 'KeyC', D: 'KeyD', E: 'KeyE', F: 'KeyF', G: 'KeyG',\r\n        H: 'KeyH', I: 'KeyI', J: 'KeyJ', K: 'KeyK', L: 'KeyL', M: 'KeyM', N: 'KeyN',\r\n        O: 'KeyO', P: 'KeyP', Q: 'KeyQ', R: 'KeyR', S: 'KeyS', T: 'KeyT', U: 'KeyU',\r\n        V: 'KeyV', W: 'KeyW', X: 'KeyX', Y: 'KeyY', Z: 'KeyZ',\r\n\r\n        // 数字键\r\n        Alpha0: 'Digit0', Alpha1: 'Digit1', Alpha2: 'Digit2', Alpha3: 'Digit3', Alpha4: 'Digit4',\r\n        Alpha5: 'Digit5', Alpha6: 'Digit6', Alpha7: 'Digit7', Alpha8: 'Digit8', Alpha9: 'Digit9',\r\n\r\n        // 功能键\r\n        F1: 'F1', F2: 'F2', F3: 'F3', F4: 'F4', F5: 'F5', F6: 'F6',\r\n        F7: 'F7', F8: 'F8', F9: 'F9', F10: 'F10', F11: 'F11', F12: 'F12',\r\n\r\n        // 特殊键\r\n        Space: 'Space',\r\n        Enter: 'Enter',\r\n        Tab: 'Tab',\r\n        Escape: 'Escape',\r\n        Backspace: 'Backspace',\r\n        Shift: 'ShiftLeft',\r\n        Control: 'ControlLeft',\r\n        Alt: 'AltLeft',\r\n        CapsLock: 'CapsLock',\r\n\r\n        // 方向键\r\n        UpArrow: 'ArrowUp',\r\n        DownArrow: 'ArrowDown',\r\n        LeftArrow: 'ArrowLeft',\r\n        RightArrow: 'ArrowRight',\r\n    };\r\n\r\n    // 初始化输入系统\r\n    public static initialize(): void {\r\n        // 键盘事件\r\n        document.addEventListener('keydown', (event) => {\r\n            Input.currentKeys.set(event.code, true);\r\n        });\r\n\r\n        document.addEventListener('keyup', (event) => {\r\n            Input.currentKeys.set(event.code, false);\r\n        });\r\n\r\n        // 鼠标事件\r\n        document.addEventListener('mousedown', (event) => {\r\n            if (event.button >= 0 && event.button < 3) {\r\n                Input.currentMouseButtons[event.button] = true;\r\n            }\r\n        });\r\n\r\n        document.addEventListener('mouseup', (event) => {\r\n            if (event.button >= 0 && event.button < 3) {\r\n                Input.currentMouseButtons[event.button] = false;\r\n            }\r\n        });\r\n\r\n        document.addEventListener('mousemove', (event) => {\r\n            const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n            const rect = canvas.getBoundingClientRect();\r\n            Input.mousePosition.x = event.clientX - rect.left;\r\n            Input.mousePosition.y = event.clientY - rect.top;\r\n            Input.mouseDelta.x = event.movementX;\r\n            Input.mouseDelta.y = event.movementY;\r\n        });\r\n\r\n        document.addEventListener('wheel', (event) => {\r\n            Input.mouseScrollDelta.y = event.deltaY;\r\n        });\r\n\r\n        document.addEventListener('scrollend', () => {\r\n            Input.mouseScrollDelta.y = 0;\r\n        });\r\n\r\n        // 触摸事件\r\n        document.addEventListener('touchstart', (event) => {\r\n            Input.updateTouches(event.touches);\r\n        });\r\n\r\n        document.addEventListener('touchmove', (event) => {\r\n            Input.updateTouches(event.touches);\r\n        });\r\n\r\n        document.addEventListener('touchend', (event) => {\r\n            Input.updateTouches(event.touches);\r\n        });\r\n\r\n        document.addEventListener('touchcancel', (event) => {\r\n            Input.updateTouches(event.touches);\r\n        });\r\n    }\r\n\r\n    // 更新输入状态（在每帧开始时调用）\r\n    public static update(): void {\r\n        // 更新键盘状态\r\n        Input.previousKeys = new Map(Input.currentKeys);\r\n\r\n        // 更新鼠标状态\r\n        Input.previousMouseButtons = [...Input.currentMouseButtons];\r\n\r\n        // 复位鼠标滚轮\r\n        Input.mouseScrollDelta.y = 0;\r\n\r\n        // 复位鼠标移动\r\n        Input.mouseDelta.x = 0;\r\n        Input.mouseDelta.y = 0;\r\n    }\r\n\r\n    //#region 键盘输入检测\r\n\r\n    // 检查按键是否被按下（持续触发）\r\n    public static GetKey(keyCode: string): boolean {\r\n        return Input.currentKeys.get(keyCode) === true;\r\n    }\r\n\r\n    // 检查按键是否在当前帧被按下（仅一帧触发）\r\n    public static GetKeyDown(keyCode: string): boolean {\r\n        return Input.currentKeys.get(keyCode) === true && Input.previousKeys.get(keyCode) !== true;\r\n    }\r\n\r\n    // 检查按键是否在当前帧被释放（仅一帧触发）\r\n    public static GetKeyUp(keyCode: string): boolean {\r\n        return Input.currentKeys.get(keyCode) !== true && Input.previousKeys.get(keyCode) === true;\r\n    }\r\n\r\n    // 获取指定轴向的输入值\r\n    public static GetAxis(axis: InputAxis): number {\r\n        switch (axis) {\r\n            case InputAxis.Horizontal:\r\n                // 水平轴 A/D 或 左右方向键\r\n                if (Input.GetKey(Input.KeyCode.D) || Input.GetKey(Input.KeyCode.RightArrow)) {\r\n                    return 1;\r\n                }\r\n                if (Input.GetKey(Input.KeyCode.A) || Input.GetKey(Input.KeyCode.LeftArrow)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            \r\n            case InputAxis.Vertical:\r\n                // 垂直轴 W/S 或 上下方向键\r\n                if (Input.GetKey(Input.KeyCode.W) || Input.GetKey(Input.KeyCode.UpArrow)) {\r\n                    return 1;\r\n                }\r\n                if (Input.GetKey(Input.KeyCode.S) || Input.GetKey(Input.KeyCode.DownArrow)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n                \r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 鼠标输入检测\r\n\r\n    // 检查鼠标按钮是否被按下（持续触发）\r\n    public static GetMouseButton(button: number): boolean {\r\n        return button >= 0 && button < 3 ? Input.currentMouseButtons[button] : false;\r\n    }\r\n\r\n    // 检查鼠标按钮是否在当前帧被按下（仅一帧触发）\r\n    public static GetMouseButtonDown(button: number): boolean {\r\n        return button >= 0 && button < 3 ?\r\n            (Input.currentMouseButtons[button] && !Input.previousMouseButtons[button]) : false;\r\n    }\r\n\r\n    // 检查鼠标按钮是否在当前帧被释放（仅一帧触发）\r\n    public static GetMouseButtonUp(button: number): boolean {\r\n        return button >= 0 && button < 3 ?\r\n            (!Input.currentMouseButtons[button] && Input.previousMouseButtons[button]) : false;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 触摸输入检测\r\n\r\n    // 更新触摸状态\r\n    private static updateTouches(touchList: TouchList): void {\r\n        Input.touches = [];\r\n        for (let i = 0; i < touchList.length; i++) {\r\n            const touch = touchList[i];\r\n            const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n            const rect = canvas.getBoundingClientRect();\r\n\r\n            Input.touches.push({\r\n                fingerId: touch.identifier,\r\n                position: {\r\n                    x: touch.clientX - rect.left,\r\n                    y: touch.clientY - rect.top\r\n                },\r\n                deltaPosition: { x: 0, y: 0 }, // 简化实现，实际应该跟踪前一帧位置\r\n                phase: TouchPhase.Moved, // 简化实现\r\n                tapCount: 1 // 简化实现\r\n            });\r\n        }\r\n    }\r\n\r\n    // 获取指定索引的触摸\r\n    public static GetTouch(index: number): Touch | null {\r\n        return index >= 0 && index < Input.touches.length ? Input.touches[index] : null;\r\n    }\r\n\r\n    // 获取触摸数量\r\n    public static get touchCount(): number {\r\n        return Input.touches.length;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n\r\n// 轴向枚举\r\nexport enum InputAxis {\r\n    Horizontal,\r\n    Vertical,\r\n}\r\n\r\n// 触摸阶段枚举\r\nexport enum TouchPhase {\r\n    Began,\r\n    Moved,\r\n    Stationary,\r\n    Ended,\r\n    Canceled\r\n}\r\n\r\n// 触摸信息接口\r\nexport interface Touch {\r\n    fingerId: number;\r\n    position: { x: number, y: number };\r\n    deltaPosition: { x: number, y: number };\r\n    phase: TouchPhase;\r\n    tapCount: number;\r\n}","/**\r\n * 模仿 Unity Time 类：提供时间管理、帧率控制、时间缩放等核心功能\r\n * 核心特性：\r\n * 1. deltaTime：上一帧到当前帧的时间间隔（受 timeScale 影响）\r\n * 2. unscaledDeltaTime：不受 timeScale 影响的原始帧间隔\r\n * 3. time：游戏启动到现在的总时间（受 timeScale 影响）\r\n * 4. fixedTime：固定时间步长的累计时间（用于物理/固定逻辑更新）\r\n * 5. timeScale：时间缩放系数（0=暂停，1=正常，>1=加速，<1=减速）\r\n */\r\nexport class Time {\r\n    // ========================== 静态属性（对应 Unity Time 静态接口）==========================\r\n    /** 上一帧到当前帧的时间间隔（秒），受 timeScale 影响（暂停时为 0） */\r\n    public static deltaTime: number = 0;\r\n\r\n    /** 上一帧到当前帧的原始时间间隔（秒），不受 timeScale 影响（暂停时仍为真实时间间隔） */\r\n    public static unscaledDeltaTime: number = 0;\r\n\r\n    /** 游戏启动到现在的总时间（秒），受 timeScale 影响（暂停时不增加） */\r\n    public static time: number = 0;\r\n\r\n    /** 游戏启动到现在的原始总时间（秒），不受 timeScale 影响（暂停时仍增加） */\r\n    public static unscaledTime: number = 0;\r\n\r\n    /** 固定时间步长（秒），用于物理更新/固定逻辑更新（默认 0.02 秒 = 50 次/秒，对应 Unity fixedDeltaTime） */\r\n    public static fixedDeltaTime: number = 0.02;\r\n\r\n    /** 固定时间步长的累计时间（秒），用于触发固定更新（对应 Unity fixedTime） */\r\n    public static fixedTime: number = 0;\r\n\r\n    /** 时间缩放系数（0 = 暂停，1 = 正常速度，2 = 2倍速，0.5 = 0.5倍速） */\r\n    public static timeScale: number = 1;\r\n\r\n    /** 帧率限制（默认无限制，设为 30/60 可固定帧率） */\r\n    public static maxFps: number | null = null;\r\n\r\n    // ========================== 私有成员（内部计时逻辑）==========================\r\n    /** 上一帧的时间戳（毫秒，用于计算帧间隔） */\r\n    private static lastFrameTime: number = performance.now();\r\n\r\n    /** 固定时间步长的累计余数（避免固定更新丢失精度） */\r\n    private static fixedTimeRemainder: number = 0;\r\n\r\n    /** 是否已初始化（确保仅启动一次计时） */\r\n    private static isInitialized: boolean = false;\r\n\r\n\r\n    // ========================== 核心方法（需集成到渲染循环）==========================\r\n    /**\r\n     * 每帧更新时间数据（必须在主循环中调用，对应 Unity 帧生命周期）\r\n     * @returns 该帧是否需要执行（用于帧率限制）\r\n     */\r\n    public static updateFrame(): boolean {\r\n        // 初始化：记录第一帧时间\r\n        if (!this.isInitialized) {\r\n            this.lastFrameTime = performance.now();\r\n            this.isInitialized = true;\r\n            return true;\r\n        }\r\n\r\n        // 1. 计算当前帧的原始时间间隔（毫秒转秒）\r\n        const currentTime = performance.now();\r\n        const rawDeltaMs = currentTime - this.lastFrameTime;\r\n        this.unscaledDeltaTime = rawDeltaMs / 1000; // 原始帧间隔（不受 timeScale 影响）\r\n\r\n        // 2. 帧率限制逻辑：若设置 maxFps，判断是否达到目标帧间隔\r\n        if (this.maxFps !== null) {\r\n            const targetFrameMs = 1000 / this.maxFps; // 目标帧间隔（毫秒）\r\n            if (rawDeltaMs < targetFrameMs) {\r\n                return false; // 未达到目标间隔，不执行当前帧\r\n            }\r\n        }\r\n\r\n        // 3. 更新受 timeScale 影响的时间属性\r\n        this.deltaTime = this.unscaledDeltaTime * this.timeScale; // 受缩放的帧间隔\r\n        this.time += this.deltaTime; // 总时间（受缩放）\r\n        this.unscaledTime += this.unscaledDeltaTime; // 原始总时间（不受缩放）\r\n\r\n        // 4. 更新固定时间步长累计（用于物理/固定更新）\r\n        this.updateFixedTime();\r\n\r\n        // 5. 记录当前时间，为下一帧做准备\r\n        this.lastFrameTime = currentTime;\r\n        return true; // 允许执行当前帧逻辑\r\n    }\r\n\r\n    /**\r\n     * 固定时间步长更新（用于物理引擎、固定频率逻辑，对应 Unity FixedUpdate）\r\n     * @param fixedUpdateCallback 固定更新回调（每累计一个 fixedDeltaTime 执行一次）\r\n     */\r\n    public static updateFixedTime(fixedUpdateCallback?: () => void): void {\r\n        // 累计原始时间（不受 timeScale 影响，确保物理更新稳定）\r\n        const totalFixedDelta = this.unscaledDeltaTime + this.fixedTimeRemainder;\r\n        const fixedStep = this.fixedDeltaTime;\r\n\r\n        // 计算需要执行多少次固定更新（例如：累计 0.05 秒，固定步长 0.02 秒 → 执行 2 次，余数 0.01 秒）\r\n        const fixedUpdateCount = Math.floor(totalFixedDelta / fixedStep);\r\n        this.fixedTimeRemainder = totalFixedDelta % fixedStep;\r\n\r\n        // 执行固定更新回调\r\n        for (let i = 0; i < fixedUpdateCount; i++) {\r\n            this.fixedTime += fixedStep; // 更新固定时间累计\r\n            fixedUpdateCallback?.();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置时间状态（用于游戏重启、场景切换）\r\n     */\r\n    public static reset(): void {\r\n        this.deltaTime = 0;\r\n        this.unscaledDeltaTime = 0;\r\n        this.time = 0;\r\n        this.unscaledTime = 0;\r\n        this.fixedTime = 0;\r\n        this.fixedTimeRemainder = 0;\r\n        this.lastFrameTime = performance.now();\r\n    }\r\n\r\n    /**\r\n     * 暂停游戏（等价于设置 timeScale = 0）\r\n     */\r\n    public static pause(): void {\r\n        this.timeScale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复游戏正常速度（等价于设置 timeScale = 1）\r\n     */\r\n    public static resume(): void {\r\n        this.timeScale = 1;\r\n    }\r\n}","import { GameObject } from \"./GameObject\";\r\nimport { Matrix4x4 } from \"../Math/Matrix4x4\";\r\nimport { Quaternion } from \"../Math/Quaternion\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Vector4 } from \"../Math/Vector4\";\r\n\r\nexport class Transform {\r\n    public readonly gameObject: GameObject;\r\n    public readonly children: Array<Transform>;\r\n\r\n    private _parent: Transform | null = null;\r\n    private _tempPos: Vector3;\r\n    private _tempRot: Quaternion;\r\n    private _tempScale: Vector3;\r\n\r\n    constructor(gameObject: GameObject) {\r\n        this.gameObject = gameObject;\r\n        this.children = new Array<Transform>();\r\n        this._parent = null;\r\n        this._tempPos = Vector3.ZERO;\r\n        this._tempRot = Quaternion.identity;\r\n        this._tempScale = Vector3.ONE;\r\n    }\r\n\r\n    public get selfMatrix(): Matrix4x4 {\r\n        return Matrix4x4.getTRSMatrix(this._tempPos, this._tempRot, this._tempScale);\r\n    }\r\n\r\n    public get localToWorldMatrix(): Matrix4x4 {\r\n        var p = this.parent != null ? this.parent.localToWorldMatrix : Matrix4x4.identity;\r\n        return p.multiply(this.selfMatrix);\r\n    }\r\n\r\n    public get worldToLocalMatrix(): Matrix4x4 {\r\n        var p = this.parent != null ? this.parent.worldToLocalMatrix : Matrix4x4.identity;\r\n        return this.selfMatrix.invert().multiply(p);\r\n    }\r\n\r\n    public get x(): number {\r\n        return this.position.x;\r\n    }\r\n\r\n    public set x(x: number) {\r\n        var pos = this.position;\r\n        pos.x = x;\r\n        this.position = pos;\r\n    }\r\n\r\n    public get y(): number {\r\n        return this.position.y;\r\n    }\r\n\r\n    public set y(y: number) {\r\n        var pos = this.position;\r\n        pos.y = y;\r\n        this.position = pos;\r\n    }\r\n\r\n    public get z(): number {\r\n        return this.position.z;\r\n    }\r\n\r\n    public set z(z: number) {\r\n        var pos = this.position;\r\n        pos.z = z;\r\n        this.position = pos;\r\n    }\r\n\r\n    public get forward(): Vector3 {\r\n        //我们要得到的是一个方向，因此不需要位置信息，将齐次坐标的w设置为0，抛弃掉坐标信息\r\n        return this.convertToWorldSpace(Vector3.FORWARD, 0);\r\n    }\r\n\r\n    public get up(): Vector3 {\r\n        return this.convertToWorldSpace(Vector3.UP, 0);\r\n    }\r\n\r\n    public get right(): Vector3 {\r\n        return this.convertToWorldSpace(Vector3.RIGHT, 0);\r\n    }\r\n\r\n    public get position(): Vector3 {\r\n        return this._tempPos.clone();\r\n    }\r\n\r\n    public set position(pos: Vector3) {\r\n        this._tempPos = pos;\r\n    }\r\n\r\n    public get worldPosition(): Vector3 {\r\n        return this.localToWorldMatrix.getTranslate();\r\n    }\r\n\r\n    public get rotation(): Quaternion {\r\n        return this._tempRot.clone();\r\n    }\r\n\r\n    public set rotation(q: Quaternion) {\r\n        this._tempRot = q;\r\n    }\r\n\r\n    public get worldRotation(): Vector3 {\r\n        return this.localToWorldMatrix.getEulerAngles();\r\n    }\r\n\r\n    public get scale(): Vector3 {\r\n        return this._tempScale.clone();\r\n    }\r\n\r\n    public set scale(s: Vector3) {\r\n        this._tempScale = s;\r\n    }\r\n\r\n    public get worldScale(): Vector3 {\r\n        return this.localToWorldMatrix.getScale();\r\n    }\r\n\r\n    public get parent(): Transform | null {\r\n        return this._parent;\r\n    }\r\n\r\n    public setParent(parent: Transform, worldPositionStays: boolean = true) {\r\n        if (parent != null && parent != this && parent != this.parent) {\r\n            //防止出现：父节点是当前节点的子节点，将子节的设置为自己的父节点，会死循环\r\n            if (parent.hasParent(this)) {\r\n                console.error(\"Failed to set parent, this node is the parent node's parent.\");\r\n                return;\r\n            }\r\n\r\n            //如果当前节点有父节点，要先移除旧的\r\n            if (this.parent != null) {\r\n                this.parent.removeChild(this, worldPositionStays);\r\n            }\r\n\r\n            parent.addChild(this, worldPositionStays);\r\n        }\r\n        else if (parent == null && this.parent != null) {\r\n            this.parent.removeChild(this, worldPositionStays);\r\n        }\r\n    }\r\n\r\n    //节点p是否是当前节点的上级\r\n    public hasParent(p: Transform): boolean {\r\n        if (this.parent == null)\r\n            return false;\r\n        else if (this.parent == p)\r\n            return true;\r\n        else\r\n            return this.parent.hasParent(p);\r\n    }\r\n\r\n    private addChild(child: Transform, worldPositionStays: boolean = true): boolean {\r\n        if (child != null && child != this && !this.children.includes(child)) {\r\n            //防止出现：child节点是当前节点的父节点，将父节的设置为自己的子节点，会死循环\r\n            if (this.hasParent(child)) {\r\n                console.error(\"Failed to add child, this node is the child node's child.\");\r\n                return false;\r\n            }\r\n\r\n            //如果子节点有旧的父节点，要先移除\r\n            if (child.parent != null) {\r\n                child.parent.removeChild(child, worldPositionStays);\r\n            }\r\n\r\n            this.children.push(child);\r\n            child._parent = this;\r\n\r\n            if (worldPositionStays) {\r\n                //保留原世界坐标位置，先朝父节点的变换的反方向移动，然后再添加进去，就能保持世界坐标不变\r\n                //即变换到父节点的逆矩阵里\r\n                var m = this.worldToLocalMatrix.multiply(child.selfMatrix);\r\n                child._tempPos = m.getTranslate();\r\n                child._tempRot = m.getRotate();\r\n                child._tempScale = m.getScale();\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private removeChild(child: Transform, worldPositionStays: boolean = true): boolean {\r\n        var index = this.children.indexOf(child, 0);\r\n\r\n        if (index > -1) {\r\n\r\n            if (worldPositionStays) {\r\n                //保留世界坐标，直接将本地坐标等同于当前世界坐标即可\r\n                var m = this.localToWorldMatrix.multiply(child.selfMatrix);\r\n                child._tempPos = m.getTranslate();\r\n                child._tempRot = m.getRotate();\r\n                child._tempScale = m.getScale();\r\n            }\r\n\r\n            this.children.splice(index, 1);\r\n            child._parent = null;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public convertToNodeSpace(v: Vector3, w: number = 1): Vector3 {\r\n        /*\r\n         *将某个坐标转到自己的局部空间，例如当前的局部坐标原点在世界坐标的（1，1）处\r\n         *点p在世界坐标（2，1）处，那么将点p相对于当前局部坐标系的位置就是（2，1）-（1，1）= （1， 0）\r\n         *即将点p反向变换当前的矩阵 \r\n         */\r\n        return this.worldToLocalMatrix.multiplyVector4(new Vector4(v, w)).vector3;\r\n    }\r\n\r\n    public convertToWorldSpace(v: Vector3, w: number = 1): Vector3 {\r\n        return this.localToWorldMatrix.multiplyVector4(new Vector4(v, w)).vector3;\r\n    }\r\n\r\n    public destroy(destroyChildren: boolean = true) {\r\n        if (destroyChildren) {\r\n            this.children.forEach(child => {\r\n                child.destroy(destroyChildren);\r\n            });\r\n        }\r\n        else {\r\n            this.children.forEach(child => {\r\n                this.removeChild(child);\r\n            });\r\n        }\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\n\nexport class Bounds {\n    min: Vector3;\n    max: Vector3;\n\n    public constructor();\n    public constructor(min: Vector3, max: Vector3);\n    public constructor(min?: Vector3, max?: Vector3) {\n        this.min = min || Vector3.ZERO;\n        this.max = max || Vector3.ZERO;\n    }\n\n    getCenter(): Vector3 {\n        return new Vector3(\n            (this.min.x + this.max.x) / 2,\n            (this.min.y + this.max.y) / 2,\n            (this.min.z + this.max.z) / 2\n        );\n    }\n\n    getHalfExtents(): Vector3 {\n        return new Vector3(\n            (this.max.x - this.min.x) / 2,\n            (this.max.y - this.min.y) / 2,\n            (this.max.z - this.min.z) / 2\n        );\n    }\n\n    setMin(min: Vector3) {\n        this.min = min;\n    }\n\n    setMax(max: Vector3) {\n        this.max = max;\n    }\n\n    static fromPoints(points: Vector3[]): Bounds {\n        if (points.length === 0) return new Bounds();\n\n        let min = new Vector3(points[0].x, points[0].y, points[0].z);\n        let max = new Vector3(points[0].x, points[0].y, points[0].z);\n\n        for (const p of points) {\n            min.x = Math.min(min.x, p.x);\n            min.y = Math.min(min.y, p.y);\n            min.z = Math.min(min.z, p.z);\n\n            max.x = Math.max(max.x, p.x);\n            max.y = Math.max(max.y, p.y);\n            max.z = Math.max(max.z, p.z);\n        }\n\n        // 假设Bounds有min和max属性\n        const bounds = new Bounds();\n        bounds.min = min;\n        bounds.max = max;\n        return bounds;\n    }\n}\n\n/**\n * 轴对齐包围盒 (AABB)\n * 最简单的包围盒，边与坐标轴平行\n */\nclass AABB {\n    min: Vector3;\n    max: Vector3;\n\n    constructor(min: Vector3, max: Vector3) {\n        this.min = min;\n        this.max = max;\n    }\n\n    /**\n     * 从顶点列表生成AABB\n     * @param vertices 三维顶点数组\n     * @returns 生成的AABB\n     */\n    static fromVertices(vertices: Vector3[]): AABB {\n        if (vertices.length === 0) {\n            throw new Error(\"顶点数组不能为空\");\n        }\n\n        // 初始化min和max为第一个顶点的值\n        const min = vertices[0].clone();\n        const max = vertices[0].clone();\n\n        // 遍历所有顶点，找到最小和最大值\n        for (const v of vertices) {\n            min.x = Math.min(min.x, v.x);\n            min.y = Math.min(min.y, v.y);\n            min.z = Math.min(min.z, v.z);\n\n            max.x = Math.max(max.x, v.x);\n            max.y = Math.max(max.y, v.y);\n            max.z = Math.max(max.z, v.z);\n        }\n\n        return new AABB(min, max);\n    }\n\n    /** 获取AABB的中心点 */\n    getCenter(): Vector3 {\n        return new Vector3(\n            (this.min.x + this.max.x) / 2,\n            (this.min.y + this.max.y) / 2,\n            (this.min.z + this.max.z) / 2\n        );\n    }\n\n    /** 获取AABB的半边长 */\n    getHalfExtents(): Vector3 {\n        return new Vector3(\n            (this.max.x - this.min.x) / 2,\n            (this.max.y - this.min.y) / 2,\n            (this.max.z - this.min.z) / 2\n        );\n    }\n}\n\n/**\n * 定向包围盒 (OBB)\n * 可以随物体旋转，边与物体自身坐标系对齐\n */\nclass OBB {\n    center: Vector3;          // 中心点\n    axes: [Vector3, Vector3, Vector3];  // 三个正交的轴向量\n    extents: Vector3;         // 每个轴方向上的半长度\n\n    constructor(center: Vector3, axes: [Vector3, Vector3, Vector3], extents: Vector3) {\n        this.center = center;\n        this.axes = axes;\n        this.extents = extents;\n    }\n\n    /**\n     * 从顶点列表生成OBB（使用PCA主成分分析）\n     * 算法思路：通过计算顶点的协方差矩阵找到主方向作为OBB的轴\n     * @param vertices 三维顶点数组\n     * @returns 生成的OBB\n     */\n    static fromVertices(vertices: Vector3[]): OBB {\n        if (vertices.length === 0) {\n            throw new Error(\"顶点数组不能为空\");\n        }\n\n        // 1. 计算中心点（平均值）\n        const center = OBB.calculateCentroid(vertices);\n\n        // 2. 计算协方差矩阵\n        const covariance = OBB.calculateCovarianceMatrix(vertices, center);\n\n        // 3. 计算协方差矩阵的特征向量（主成分），作为OBB的轴\n        const eigenvectors = OBB.calculateEigenvectors(covariance);\n\n        // 确保轴是单位向量\n        const axes: [Vector3, Vector3, Vector3] = [\n            eigenvectors[0].multiply(1 / eigenvectors[0].magnitude),\n            eigenvectors[1].multiply(1 / eigenvectors[1].magnitude),\n            eigenvectors[2].multiply(1 / eigenvectors[2].magnitude)\n        ];\n\n        // 4. 计算每个轴方向上的最大延伸（半长度）\n        const extents = OBB.calculateExtents(vertices, center, axes);\n\n        return new OBB(center, axes, extents);\n    }\n\n    /** 计算顶点的中心点（质心） */\n    private static calculateCentroid(vertices: Vector3[]): Vector3 {\n        const sum = new Vector3();\n        for (const v of vertices) {\n            sum.x += v.x;\n            sum.y += v.y;\n            sum.z += v.z;\n        }\n        return sum.multiply(1 / vertices.length);\n    }\n\n    /** 计算协方差矩阵 */\n    private static calculateCovarianceMatrix(vertices: Vector3[], centroid: Vector3): number[][] {\n        // 初始化3x3协方差矩阵\n        const cov = [\n            [0, 0, 0],\n            [0, 0, 0],\n            [0, 0, 0]\n        ];\n\n        for (const v of vertices) {\n            // 计算顶点相对于质心的偏移\n            const x = v.x - centroid.x;\n            const y = v.y - centroid.y;\n            const z = v.z - centroid.z;\n\n            // 累积协方差值\n            cov[0][0] += x * x;\n            cov[0][1] += x * y;\n            cov[0][2] += x * z;\n            cov[1][1] += y * y;\n            cov[1][2] += y * z;\n            cov[2][2] += z * z;\n        }\n\n        // 对称矩阵，填充下三角部分\n        cov[1][0] = cov[0][1];\n        cov[2][0] = cov[0][2];\n        cov[2][1] = cov[1][2];\n\n        // 除以顶点数量-1（无偏估计）\n        const n = vertices.length;\n        for (let i = 0; i < 3; i++) {\n            for (let j = 0; j < 3; j++) {\n                cov[i][j] /= (n - 1);\n            }\n        }\n\n        return cov;\n    }\n\n    /** 计算协方差矩阵的特征向量（简化实现） */\n    private static calculateEigenvectors(cov: number[][]): [Vector3, Vector3, Vector3] {\n        // 这里使用简化的特征向量计算方法\n        // 实际应用中可能需要更精确的算法（如Jacobi迭代法）\n\n        // 对于演示目的，我们返回三个正交向量（实际项目中需替换为真实特征向量计算）\n        // 注意：这只是占位实现，真实场景需要正确计算特征向量\n        return [\n            new Vector3(1, 0, 0),  // 假设X轴为第一主成分\n            new Vector3(0, 1, 0),  // 假设Y轴为第二主成分\n            new Vector3(0, 0, 1)   // 假设Z轴为第三主成分\n        ];\n    }\n\n    /** 计算每个轴方向上的半长度 */\n    private static calculateExtents(\n        vertices: Vector3[],\n        center: Vector3,\n        axes: [Vector3, Vector3, Vector3]\n    ): Vector3 {\n        let extentX = 0;\n        let extentY = 0;\n        let extentZ = 0;\n\n        // 对每个轴计算顶点在该轴上的投影范围\n        for (let i = 0; i < 3; i++) {\n            const axis = axes[i];\n            let min = Infinity;\n            let max = -Infinity;\n\n            for (const v of vertices) {\n                // 计算顶点相对于中心点的向量\n                const dir = v.subtract(center);\n                // 计算在当前轴上的投影\n                const proj = Vector3.dot(dir, axis);\n\n                min = Math.min(min, proj);\n                max = Math.max(max, proj);\n            }\n\n            // 半长度取最大绝对值\n            const extent = Math.max(Math.abs(min), Math.abs(max));\n\n            // 直接赋值给对应分量\n            if (i === 0) extentX = extent;\n            else if (i === 1) extentY = extent;\n            else extentZ = extent;\n        }\n\n        return new Vector3(extentX, extentY, extentZ);\n    }\n}\n\n/**\n * 球体包围盒\n * 用球心和半径表示的简化包围体\n */\nclass Sphere {\n    center: Vector3;\n    radius: number;\n\n    constructor(center: Vector3, radius: number) {\n        this.center = center;\n        this.radius = radius;\n    }\n\n    /**\n     * 从顶点列表生成球体包围盒\n     * 算法思路：先计算所有顶点的中心点，再找到离中心点最远的顶点作为半径\n     * @param vertices 三维顶点数组\n     * @returns 生成的球体\n     */\n    static fromVertices(vertices: Vector3[]): Sphere {\n        if (vertices.length === 0) {\n            throw new Error(\"顶点数组不能为空\");\n        }\n\n        // 1. 计算中心点（平均值）\n        const center = new Vector3();\n        for (const v of vertices) {\n            center.x += v.x;\n            center.y += v.y;\n            center.z += v.z;\n        }\n        center.x /= vertices.length;\n        center.y /= vertices.length;\n        center.z /= vertices.length;\n\n        // 2. 找到离中心点最远的顶点，其距离即为半径\n        let maxDistanceSquared = 0;\n        for (const v of vertices) {\n            const dx = v.x - center.x;\n            const dy = v.y - center.y;\n            const dz = v.z - center.z;\n            const distanceSquared = dx * dx + dy * dy + dz * dz;\n\n            if (distanceSquared > maxDistanceSquared) {\n                maxDistanceSquared = distanceSquared;\n            }\n        }\n\n        const radius = Math.sqrt(maxDistanceSquared);\n        return new Sphere(center, radius);\n    }\n\n    /**\n     * 从AABB生成球体包围盒\n     * @param aabb 轴对齐包围盒\n     * @returns 生成的球体\n     */\n    static fromAABB(aabb: AABB): Sphere {\n        const center = aabb.getCenter();\n        const halfExtents = aabb.getHalfExtents();\n        // 半径是从中心到角落的距离\n        const radius = halfExtents.magnitude;\n        return new Sphere(center, radius);\n    }\n}\n\n// 示例用法\nfunction exampleUsage() {\n    // 创建一些示例顶点\n    const vertices = [\n        new Vector3(0, 0, 0),\n        new Vector3(1, 0, 0),\n        new Vector3(0, 1, 0),\n        new Vector3(0, 0, 1),\n        new Vector3(1, 1, 1)\n    ];\n\n    // 生成AABB\n    const aabb = AABB.fromVertices(vertices);\n    console.log(\"AABB:\");\n    console.log(\"  Min:\", `(${aabb.min.x}, ${aabb.min.y}, ${aabb.min.z})`);\n    console.log(\"  Max:\", `(${aabb.max.x}, ${aabb.max.y}, ${aabb.max.z})`);\n\n    // 生成OBB\n    const obb = OBB.fromVertices(vertices);\n    console.log(\"\\nOBB:\");\n    console.log(\"  Center:\", `(${obb.center.x}, ${obb.center.y}, ${obb.center.z})`);\n    console.log(\"  Extents:\", `(${obb.extents.x}, ${obb.extents.y}, ${obb.extents.z})`);\n\n    // 生成球体\n    const sphere = Sphere.fromVertices(vertices);\n    console.log(\"\\nSphere:\");\n    console.log(\"  Center:\", `(${sphere.center.x}, ${sphere.center.y}, ${sphere.center.z})`);\n    console.log(\"  Radius:\", sphere.radius);\n}\n","import { Vector4 } from \"./Vector4\";\r\nimport { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\nexport class Matrix4x4 {\r\n\r\n    public matrix: Array<Array<number>> = new Array<Array<number>>();\r\n\r\n    public constructor();\r\n    public constructor(column0: Vector4, column1: Vector4, column2: Vector4, column3: Vector4);\r\n    public constructor() {\r\n        if (arguments.length == 4) {\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = arguments[i] as Vector4;\r\n                this.matrix[i] = new Array<number>(v.x, v.y, v.z, v.w);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 4; i++) {\r\n                this.matrix[i] = new Array<number>(0, 0, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index 行\r\n     */\r\n    public getRow(index: number): Vector4 {\r\n        var c = this.matrix[index];\r\n        return new Vector4(c[0], c[1], c[2], c[3]);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index 列\r\n     */\r\n    public getColumn(index: number): Vector4 {\r\n        return new Vector4(this.matrix[0][index], this.matrix[1][index], this.matrix[2][index], this.matrix[3][index]);\r\n    }\r\n\r\n    public SetRow(index: number, row: Vector4) {\r\n        this.matrix[index][0] = row.x;\r\n        this.matrix[index][1] = row.y;\r\n        this.matrix[index][2] = row.z;\r\n        this.matrix[index][3] = row.w;\r\n    }\r\n\r\n    public SetColumn(index: number, column: Vector4) {\r\n        this.matrix[0][index] = column.x;\r\n        this.matrix[1][index] = column.y;\r\n        this.matrix[2][index] = column.z;\r\n        this.matrix[3][index] = column.w;\r\n    }\r\n\r\n    public multiply(m: Matrix4x4): Matrix4x4 {\r\n        let lhs = this.matrix;\r\n        let rhs = m.matrix;\r\n        let matrix = new Matrix4x4().matrix;\r\n\r\n        matrix[0][0] = lhs[0][0] * rhs[0][0] + lhs[0][1] * rhs[1][0] + lhs[0][2] * rhs[2][0] + lhs[0][3] * rhs[3][0];\r\n        matrix[0][1] = lhs[0][0] * rhs[0][1] + lhs[0][1] * rhs[1][1] + lhs[0][2] * rhs[2][1] + lhs[0][3] * rhs[3][1];\r\n        matrix[0][2] = lhs[0][0] * rhs[0][2] + lhs[0][1] * rhs[1][2] + lhs[0][2] * rhs[2][2] + lhs[0][3] * rhs[3][2];\r\n        matrix[0][3] = lhs[0][0] * rhs[0][3] + lhs[0][1] * rhs[1][3] + lhs[0][2] * rhs[2][3] + lhs[0][3] * rhs[3][3];\r\n        matrix[1][0] = lhs[1][0] * rhs[0][0] + lhs[1][1] * rhs[1][0] + lhs[1][2] * rhs[2][0] + lhs[1][3] * rhs[3][0];\r\n        matrix[1][1] = lhs[1][0] * rhs[0][1] + lhs[1][1] * rhs[1][1] + lhs[1][2] * rhs[2][1] + lhs[1][3] * rhs[3][1];\r\n        matrix[1][2] = lhs[1][0] * rhs[0][2] + lhs[1][1] * rhs[1][2] + lhs[1][2] * rhs[2][2] + lhs[1][3] * rhs[3][2];\r\n        matrix[1][3] = lhs[1][0] * rhs[0][3] + lhs[1][1] * rhs[1][3] + lhs[1][2] * rhs[2][3] + lhs[1][3] * rhs[3][3];\r\n        matrix[2][0] = lhs[2][0] * rhs[0][0] + lhs[2][1] * rhs[1][0] + lhs[2][2] * rhs[2][0] + lhs[2][3] * rhs[3][0];\r\n        matrix[2][1] = lhs[2][0] * rhs[0][1] + lhs[2][1] * rhs[1][1] + lhs[2][2] * rhs[2][1] + lhs[2][3] * rhs[3][1];\r\n        matrix[2][2] = lhs[2][0] * rhs[0][2] + lhs[2][1] * rhs[1][2] + lhs[2][2] * rhs[2][2] + lhs[2][3] * rhs[3][2];\r\n        matrix[2][3] = lhs[2][0] * rhs[0][3] + lhs[2][1] * rhs[1][3] + lhs[2][2] * rhs[2][3] + lhs[2][3] * rhs[3][3];\r\n        matrix[3][0] = lhs[3][0] * rhs[0][0] + lhs[3][1] * rhs[1][0] + lhs[3][2] * rhs[2][0] + lhs[3][3] * rhs[3][0];\r\n        matrix[3][1] = lhs[3][0] * rhs[0][1] + lhs[3][1] * rhs[1][1] + lhs[3][2] * rhs[2][1] + lhs[3][3] * rhs[3][1];\r\n        matrix[3][2] = lhs[3][0] * rhs[0][2] + lhs[3][1] * rhs[1][2] + lhs[3][2] * rhs[2][2] + lhs[3][3] * rhs[3][2];\r\n        matrix[3][3] = lhs[3][0] * rhs[0][3] + lhs[3][1] * rhs[1][3] + lhs[3][2] * rhs[2][3] + lhs[3][3] * rhs[3][3];\r\n\r\n        this.matrix = matrix;\r\n        return this;\r\n    }\r\n\r\n    public multiplyVector3(v: Vector3): Vector3 {\r\n        let res = new Vector3();\r\n        let m = this.matrix;\r\n\r\n        res.x = m[0][0] * v.x + m[0][1] * v.y + m[0][2] * v.z;\r\n        res.y = m[1][0] * v.x + m[1][1] * v.y + m[1][2] * v.z;\r\n        res.z = m[2][0] * v.x + m[2][1] * v.y + m[2][2] * v.z;\r\n\r\n        return res;\r\n    }\r\n\r\n    public multiplyVector4(v: Vector4): Vector4 {\r\n        let res = new Vector4();\r\n        let m = this.matrix;\r\n\r\n        res.x = m[0][0] * v.x + m[0][1] * v.y + m[0][2] * v.z + m[0][3] * v.w;\r\n        res.y = m[1][0] * v.x + m[1][1] * v.y + m[1][2] * v.z + m[1][3] * v.w;\r\n        res.z = m[2][0] * v.x + m[2][1] * v.y + m[2][2] * v.z + m[2][3] * v.w;\r\n        res.w = m[3][0] * v.x + m[3][1] * v.y + m[3][2] * v.z + m[3][3] * v.w;\r\n\r\n        return res;\r\n    }\r\n\r\n    public getTranslate(): Vector3 {\r\n        let m = this.matrix;\r\n        return new Vector3(m[0][3], m[1][3], m[2][3]);\r\n    }\r\n\r\n    // public getRotate(): Vector3 {\r\n    //     let mat = this.matrix;\r\n\r\n    //     let x = Math.atan2(mat[1][2], mat[2][2]);\r\n    //     let y = Math.atan2(-mat[0][2], Math.sqrt(mat[1][2] * mat[1][2] + mat[2][2] * mat[2][2]));\r\n    //     let z = Math.atan2(mat[0][1], mat[0][0]);\r\n\r\n    //     return new Vector3(x / Math.PI * 180, y / Math.PI * 180, z / Math.PI * 180);\r\n    // }\r\n\r\n    public getRotate(): Quaternion {\r\n        //一定要获取纯净的旋转矩阵，即去除缩放倍率\r\n        let mat = this.getRotateMatrix().matrix;\r\n        let q = new Quaternion();\r\n\r\n        var trace = mat[0][0] + mat[1][1] + mat[2][2]; // I removed + 1.0f; see discussion with Ethan\r\n        var s = 0;\r\n\r\n        if (trace > 0) {// I changed M_EPSILON to 0\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n            q.w = 0.25 / s;\r\n            q.x = (mat[2][1] - mat[1][2]) * s;\r\n            q.y = (mat[0][2] - mat[2][0]) * s;\r\n            q.z = (mat[1][0] - mat[0][1]) * s;\r\n        } else {\r\n            if (mat[0][0] > mat[1][1] && mat[0][0] > mat[2][2]) {\r\n                s = 2.0 * Math.sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]);\r\n                q.w = (mat[2][1] - mat[1][2]) / s;\r\n                q.x = 0.25 * s;\r\n                q.y = (mat[0][1] + mat[1][0]) / s;\r\n                q.z = (mat[0][2] + mat[2][0]) / s;\r\n            } else if (mat[1][1] > mat[2][2]) {\r\n                s = 2.0 * Math.sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]);\r\n                q.w = (mat[0][2] - mat[2][0]) / s;\r\n                q.x = (mat[0][1] + mat[1][0]) / s;\r\n                q.y = 0.25 * s;\r\n                q.z = (mat[1][2] + mat[2][1]) / s;\r\n            } else {\r\n                s = 2.0 * Math.sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]);\r\n                q.w = (mat[1][0] - mat[0][1]) / s;\r\n                q.x = (mat[0][2] + mat[2][0]) / s;\r\n                q.y = (mat[1][2] + mat[2][1]) / s;\r\n                q.z = 0.25 * s;\r\n            }\r\n        }\r\n\r\n        return q;\r\n    }\r\n\r\n    public getRotateMatrix(): Matrix4x4 {\r\n        //https://github.com/mrdoob/three.js/blob/dev/src/math/Matrix4.js\r\n        //因为旋转矩阵比较特殊，有时候要单独处理，所有拥有一个提取方法\r\n        //提取方式很简单，先获取缩放值，然后利用获取缩放值的原理，逆向除去缩放值，就得到纯净的旋转矩阵\r\n        //此方法不支持反射矩阵\r\n\r\n        var mat = new Matrix4x4();\r\n        var te = mat.matrix;\r\n        var me = this.matrix;\r\n\r\n        var scale = this.getScale();\r\n        var scaleX = 1 / scale.x;\r\n        var scaleY = 1 / scale.y;\r\n        var scaleZ = 1 / scale.z;\r\n\r\n        te[0][0] = me[0][0] * scaleX;\r\n        te[1][0] = me[1][0] * scaleX;\r\n        te[2][0] = me[2][0] * scaleX;\r\n        te[3][0] = 0;\r\n\r\n        te[0][1] = me[0][1] * scaleY;\r\n        te[1][1] = me[1][1] * scaleY;\r\n        te[2][1] = me[2][1] * scaleY;\r\n        te[3][1] = 0;\r\n\r\n        te[0][2] = me[0][2] * scaleZ;\r\n        te[1][2] = me[1][2] * scaleZ;\r\n        te[2][2] = me[2][2] * scaleZ;\r\n        te[3][2] = 0;\r\n\r\n        te[0][3] = 0;\r\n        te[1][3] = 0;\r\n        te[2][3] = 0;\r\n        te[3][3] = 1;\r\n\r\n        return mat;\r\n    }\r\n\r\n    public getEulerAngles(): Vector3 {\r\n        //https://github.com/mrdoob/three.js/blob/dev/src/math/Matrix4.js\r\n        //从旋转矩阵里获取欧拉角\r\n        //必须是纯净的旋转矩阵\r\n\r\n        var angle = new Vector3();\r\n\r\n        var te = this.getRotateMatrix().matrix;\r\n        var m11 = te[0][0], m12 = te[0][1], m13 = te[0][2];\r\n        var m21 = te[1][0], m22 = te[1][1], m23 = te[1][2];\r\n        var m31 = te[2][0], m32 = te[2][1], m33 = te[2][2];\r\n\r\n        m13 = m13 > 1 ? 1 : m13;\r\n        m13 = m13 < -1 ? -1 : m13;\r\n        angle.y = Math.asin(m13);\r\n\r\n        if (Math.abs(m13) < 0.9999999) {\r\n            angle.x = Math.atan2(-m23, m33);\r\n            angle.z = Math.atan2(-m12, m11);\r\n        } else {\r\n            angle.x = Math.atan2(m32, m22);\r\n            angle.z = 0;\r\n        }\r\n\r\n        return new Vector3(angle.x / Math.PI * 180, angle.y / Math.PI * 180, angle.z / Math.PI * 180);\r\n    }\r\n\r\n    public getScale(): Vector3 {\r\n        let m = this.matrix;\r\n        let v = new Vector3();\r\n\r\n        v.x = Math.sqrt(m[0][0] * m[0][0] + m[1][0] * m[1][0] + m[2][0] * m[2][0]);\r\n        v.y = Math.sqrt(m[0][1] * m[0][1] + m[1][1] * m[1][1] + m[2][1] * m[2][1]);\r\n        v.z = Math.sqrt(m[0][2] * m[0][2] + m[1][2] * m[1][2] + m[2][2] * m[2][2]);\r\n\r\n        return v;\r\n    }\r\n\r\n    // 转置矩阵\r\n    public transpose(): Matrix4x4 {\r\n        let m1 = this.matrix;\r\n        var m2 = new Matrix4x4().matrix;\r\n\r\n        m2[0][0] = m1[0][0]; m2[0][1] = m1[1][0]; m2[0][2] = m1[2][0]; m2[0][3] = m1[3][0];\r\n        m2[1][0] = m1[0][1]; m2[1][1] = m1[1][1]; m2[1][2] = m1[2][1]; m2[1][3] = m1[3][1];\r\n        m2[2][0] = m1[0][2]; m2[2][1] = m1[1][2]; m2[2][2] = m1[2][2]; m2[2][3] = m1[3][2];\r\n        m2[3][0] = m1[0][3]; m2[3][1] = m1[1][3]; m2[3][2] = m1[2][3]; m2[3][3] = m1[3][3];\r\n\r\n        this.matrix = m2;\r\n        return this;\r\n    }\r\n\r\n    public translate(pos: Vector3): Matrix4x4 {\r\n        let m = Matrix4x4.getTranslateMatrix(pos);\r\n        this.matrix = m.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public rotate(q: Quaternion): Matrix4x4;\r\n    public rotate(eulerAngles: Vector3): Matrix4x4;\r\n    public rotate(angle: number, axis: Vector3): Matrix4x4;\r\n    public rotate(): Matrix4x4 {\r\n        let m = new Matrix4x4();\r\n\r\n        if (arguments[0] instanceof Quaternion) {\r\n            m = Matrix4x4.getRotateMatrixByQuaternion(arguments[0]);\r\n        }\r\n        else if (arguments[0] instanceof Vector3) {\r\n            m = Matrix4x4.getRotateMatrixByEulerAngles(arguments[0]);\r\n        }\r\n        else {\r\n            m = Matrix4x4.getRotateMatrixByAxis(arguments[0], arguments[1]);\r\n        }\r\n\r\n        this.matrix = m.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public scale(s: Vector3): Matrix4x4 {\r\n        let m = Matrix4x4.getScaleMatrix(s);\r\n        this.matrix = m.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public lookAt(target: Vector3): Matrix4x4 {\r\n        // todo\r\n        return this;\r\n    }\r\n\r\n    //转换到摄影机看向的矩阵里\r\n    public transformToLookAtSpace(eye: Vector3, targetPoint: Vector3, up: Vector3 = Vector3.UP): Matrix4x4 {\r\n        //从哪里看向哪里，也可以理解为摄影机视角，即观察空间\r\n        //若要变换到摄影机空间，可以假设整个观察空间以摄影机位于世界坐标原点，然后将所有物体朝摄影机原先在世界空间中的位置反向移动即可\r\n        //在纸上画下图就清晰了\r\n\r\n        //由于默认矩阵是SRT顺序组成的变换空间，要逆向，则是TRS的顺序，即先移动后旋转\r\n        //1.向反方向平移\r\n        this.translate(new Vector3(-eye.x, -eye.y, -eye.z));\r\n\r\n        //2.向反方向旋转\r\n        //先获取摄影世界部坐标轴\r\n        var zAxis = Vector3.difference(eye, targetPoint).normalize();\r\n        //因为我们是右手系统，要求X，则必须z乘y\r\n        var xAxis = Vector3.cross(up, zAxis).normalize();\r\n        var yAxis = Vector3.cross(zAxis, xAxis).normalize();\r\n        //构建摄影机反方向旋转矩阵\r\n        var mat = new Matrix4x4(\r\n            new Vector4(xAxis),\r\n            new Vector4(yAxis),\r\n            new Vector4(zAxis),\r\n            new Vector4(0, 0, 0, 1));\r\n\r\n        this.matrix = mat.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4x4 {\r\n        const rl = (right - left)\r\n        const tb = (top - bottom)\r\n        const fn = (far - near)\r\n\r\n        var mat = new Matrix4x4(\r\n            new Vector4((near * 2) / rl, 0, (right + left) / rl, 0),\r\n            new Vector4(0, (near * 2) / tb, (top + bottom) / tb, 0),\r\n            new Vector4(0, 0, -(far + near) / fn, -(far * near * 2) / fn),\r\n            new Vector4(0, 0, -1, 0)\r\n        );\r\n\r\n        this.matrix = mat.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4x4 {\r\n        const rl = (right - left)\r\n        const tb = (top - bottom)\r\n        const fn = (far - near)\r\n\r\n        var mat = new Matrix4x4(\r\n            new Vector4(2 / rl, 0, 0, -(left + right) / rl),\r\n            new Vector4(0, 2 / tb, 0, -(top + bottom) / tb),\r\n            new Vector4(0, 0, -2 / fn, -(far + near) / fn),\r\n            new Vector4(0, 0, 0, 1)\r\n        );\r\n\r\n        this.matrix = mat.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    public perspective(fov: number, aspect: number, near: number, far: number): Matrix4x4 {\r\n        const hfov = fov / 180 * Math.PI / 2;\r\n        const tan = Math.tan(hfov);\r\n\r\n        var mat = new Matrix4x4(\r\n            new Vector4(1 / (aspect * tan), 0, 0, 0),\r\n            new Vector4(0, 1 / tan, 0, 0),\r\n            new Vector4(0, 0, -(far + near) / (far - near), -(2 * far * near) / (far - near)),\r\n            new Vector4(0, 0, -1, 0)\r\n        );\r\n\r\n        this.matrix = mat.multiply(this).matrix;\r\n        return this;\r\n    }\r\n\r\n    // 通过​​代数余子式法（Cofactor Method）​​ 来计算一个 4x4 方阵的逆矩阵\r\n    public invert(): Matrix4x4 {\r\n        var mat = this.matrix;\r\n\r\n        const a00 = mat[0][0];\r\n        const a01 = mat[0][1];\r\n        const a02 = mat[0][2];\r\n        const a03 = mat[0][3];\r\n        const a10 = mat[1][0];\r\n        const a11 = mat[1][1];\r\n        const a12 = mat[1][2];\r\n        const a13 = mat[1][3];\r\n        const a20 = mat[2][0];\r\n        const a21 = mat[2][1];\r\n        const a22 = mat[2][2];\r\n        const a23 = mat[2][3];\r\n        const a30 = mat[3][0];\r\n        const a31 = mat[3][1];\r\n        const a32 = mat[3][2];\r\n        const a33 = mat[3][3];\r\n\r\n        const det00 = a00 * a11 - a01 * a10\r\n        const det01 = a00 * a12 - a02 * a10\r\n        const det02 = a00 * a13 - a03 * a10\r\n        const det03 = a01 * a12 - a02 * a11\r\n        const det04 = a01 * a13 - a03 * a11\r\n        const det05 = a02 * a13 - a03 * a12\r\n        const det06 = a20 * a31 - a21 * a30\r\n        const det07 = a20 * a32 - a22 * a30\r\n        const det08 = a20 * a33 - a23 * a30\r\n        const det09 = a21 * a32 - a22 * a31\r\n        const det10 = a21 * a33 - a23 * a31\r\n        const det11 = a22 * a33 - a23 * a32\r\n\r\n        let det = (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\r\n\r\n        if (!det) {\r\n            console.error(\"Matrix4x4 inverse failed, determinant is 0\");\r\n            // return null;\r\n        }\r\n\r\n        det = 1.0 / det;\r\n\r\n        mat[0][0] = (a11 * det11 - a12 * det10 + a13 * det09) * det\r\n        mat[0][1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det\r\n        mat[0][2] = (a31 * det05 - a32 * det04 + a33 * det03) * det\r\n        mat[0][3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det\r\n        mat[1][0] = (-a10 * det11 + a12 * det08 - a13 * det07) * det\r\n        mat[1][1] = (a00 * det11 - a02 * det08 + a03 * det07) * det\r\n        mat[1][2] = (-a30 * det05 + a32 * det02 - a33 * det01) * det\r\n        mat[1][3] = (a20 * det05 - a22 * det02 + a23 * det01) * det\r\n        mat[2][0] = (a10 * det10 - a11 * det08 + a13 * det06) * det\r\n        mat[2][1] = (-a00 * det10 + a01 * det08 - a03 * det06) * det\r\n        mat[2][2] = (a30 * det04 - a31 * det02 + a33 * det00) * det\r\n        mat[2][3] = (-a20 * det04 + a21 * det02 - a23 * det00) * det\r\n        mat[3][0] = (-a10 * det09 + a11 * det07 - a12 * det06) * det\r\n        mat[3][1] = (a00 * det09 - a01 * det07 + a02 * det06) * det\r\n        mat[3][2] = (-a30 * det03 + a31 * det01 - a32 * det00) * det\r\n        mat[3][3] = (a20 * det03 - a21 * det01 + a22 * det00) * det\r\n\r\n        return this;\r\n    }\r\n\r\n    public toFloat32List(): Float32List {\r\n        let m = this.matrix;\r\n        //由于OpenGL是列序存储，所以需要转置一下矩阵\r\n        return new Float32Array([\r\n            m[0][0], m[1][0], m[2][0], m[3][0],\r\n            m[0][1], m[1][1], m[2][1], m[3][1],\r\n            m[0][2], m[1][2], m[2][2], m[3][2],\r\n            m[0][3], m[1][3], m[2][3], m[3][3]\r\n        ]);\r\n    }\r\n\r\n    public clone(): Matrix4x4 {\r\n        return new Matrix4x4(\r\n            this.getRow(0),\r\n            this.getRow(1),\r\n            this.getRow(2),\r\n            this.getRow(3),\r\n        );\r\n    }\r\n\r\n    /*\r\n     STATIC FUNCTIONS\r\n     */\r\n\r\n    public static getTRSMatrix(pos: Vector3, quat: Quaternion, scale: Vector3): Matrix4x4 {\r\n        let tm = Matrix4x4.getTranslateMatrix(pos);\r\n        let rm = Matrix4x4.getRotateMatrixByQuaternion(quat);\r\n        let sm = Matrix4x4.getScaleMatrix(scale);\r\n\r\n        //必须严格按照先Scale，再Rotate，再Translate的顺序，否则得到的结果肯定是不满意的\r\n        //例如有一个1X1正方形在原点，我们想要得到一个1X2，并且斜向45°，而且离坐标原点1个单位处\r\n        //如果先旋转，再缩放的话，旋转方向是对了，但是我们是将旋转后45°的正方形的Y轴拉伸2倍，得到的是一个被拉长的菱形\r\n        //如果先平移，再旋转的话，因为我们旋转都是绕着坐标原点的，结果自然是正方形不是自身旋转45°，而是绕着原点旋转\r\n        return tm.multiply(rm.multiply(sm));\r\n    }\r\n\r\n    public static getTranslateMatrix(pos: Vector3): Matrix4x4 {\r\n        let result = new Matrix4x4();\r\n        let m = result.matrix;\r\n\r\n        m[0][0] = 1; m[0][1] = 0; m[0][2] = 0; m[0][3] = pos.x;\r\n        m[1][0] = 0; m[1][1] = 1; m[1][2] = 0; m[1][3] = pos.y;\r\n        m[2][0] = 0; m[2][1] = 0; m[2][2] = 1; m[2][3] = pos.z;\r\n        m[3][0] = 0; m[3][1] = 0; m[3][2] = 0; m[3][3] = 1;\r\n\r\n        return result;\r\n    }\r\n\r\n    public static getRotateMatrixByQuaternion(q: Quaternion): Matrix4x4 {\r\n        let result = new Matrix4x4();\r\n        let m = result.matrix;\r\n\r\n        let num = q.x * 2;\r\n        let num2 = q.y * 2;\r\n        let num3 = q.z * 2;\r\n        let num4 = q.x * num;\r\n        let num5 = q.y * num2;\r\n        let num6 = q.z * num3;\r\n        let num7 = q.x * num2;\r\n        let num8 = q.x * num3;\r\n        let num9 = q.y * num3;\r\n        let num10 = q.w * num;\r\n        let num11 = q.w * num2;\r\n        let num12 = q.w * num3;\r\n\r\n        m[0][0] = 1 - (num5 + num6);\r\n        m[1][0] = num7 + num12;\r\n        m[2][0] = num8 - num11;\r\n        m[3][0] = 0;\r\n        m[0][1] = num7 - num12;\r\n        m[1][1] = 1 - (num4 + num6);\r\n        m[2][1] = num9 + num10;\r\n        m[3][1] = 0;\r\n        m[0][2] = num8 + num11;\r\n        m[1][2] = num9 - num10;\r\n        m[2][2] = 1 - (num4 + num5);\r\n        m[3][2] = 0;\r\n        m[0][3] = 0;\r\n        m[1][3] = 0;\r\n        m[2][3] = 0;\r\n        m[3][3] = 1;\r\n\r\n        return result;\r\n    }\r\n\r\n    public static getRotateMatrixByEulerAngles(e: Vector3, order: string = \"XYZ\"): Matrix4x4 {\r\n        //通过欧拉角获取旋转矩阵\r\n        //先分别获取XYZ轴上的旋转矩阵，然后合并起来\r\n        //注意：旋转轴的顺序先后不同，会出现不同的结果，因此必须要指定旋转顺序\r\n        //http://planning.cs.uiuc.edu/node102.html\r\n        //https://threejs.org/docs/#api/en/math/Euler.order\r\n        var x = Matrix4x4.getRotateMatrixByAxis(e.x, Vector3.RIGHT);\r\n        var y = Matrix4x4.getRotateMatrixByAxis(e.y, Vector3.UP);\r\n        var z = Matrix4x4.getRotateMatrixByAxis(e.z, Vector3.FORWARD);\r\n\r\n        switch (order) {\r\n            case \"XYZ\":\r\n                return z.multiply(y.multiply(x));\r\n            case \"XZY\":\r\n                return y.multiply(z.multiply(x));\r\n            case \"YXZ\":\r\n                return z.multiply(x.multiply(y));\r\n            case \"YZX\":\r\n                return x.multiply(z.multiply(y));\r\n            case \"ZXY\":\r\n                return y.multiply(x.multiply(z));\r\n            case \"ZYX\":\r\n                return x.multiply(y.multiply(z));\r\n            default:\r\n                console.error(\"Rotation order error, must be similar to 'XYZ'\");\r\n                return z.multiply(y.multiply(x));\r\n        }\r\n    }\r\n\r\n    public static getRotateMatrixByAxis(angle: number, axis: Vector3): Matrix4x4 {\r\n        var out = new Matrix4x4();\r\n        var m = out.matrix;\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var len = Math.sqrt(x * x + y * y + z * z);\r\n        var s = 0, c = 0, t = 0;\r\n\r\n        angle = Math.PI * angle / 180;\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n        s = Math.sin(angle);\r\n        c = Math.cos(angle);\r\n        t = 1 - c;\r\n        m[0][0] = x * x * t + c;\r\n        m[1][0] = y * x * t + z * s;\r\n        m[2][0] = z * x * t - y * s;\r\n        m[3][0] = 0;\r\n        m[0][1] = x * y * t - z * s;\r\n        m[1][1] = y * y * t + c;\r\n        m[2][1] = z * y * t + x * s;\r\n        m[3][1] = 0;\r\n        m[0][2] = x * z * t + y * s;\r\n        m[1][2] = y * z * t - x * s;\r\n        m[2][2] = z * z * t + c;\r\n        m[3][2] = 0;\r\n        m[0][3] = 0;\r\n        m[1][3] = 0;\r\n        m[2][3] = 0;\r\n        m[3][3] = 1;\r\n        return out;\r\n    }\r\n\r\n    public static getScaleMatrix(s: Vector3): Matrix4x4 {\r\n        let result = new Matrix4x4();\r\n        let m = result.matrix;\r\n\r\n        m[0][0] = s.x; m[0][1] = 0; m[0][2] = 0; m[0][3] = 0;\r\n        m[1][0] = 0; m[1][1] = s.y; m[1][2] = 0; m[1][3] = 0;\r\n        m[2][0] = 0; m[2][1] = 0; m[2][2] = s.z; m[2][3] = 0;\r\n        m[3][0] = 0; m[3][1] = 0; m[3][2] = 0; m[3][3] = 1;\r\n\r\n        return result;\r\n    }\r\n\r\n    public static perspective(fov: number, aspect: number, near: number, far: number): Matrix4x4 {\r\n        const fovRad = fov / 180 * Math.PI;\r\n        const tanHalfFov = Math.tan(fovRad / 2);\r\n        const mat = new Matrix4x4(\r\n            new Vector4(1 / (aspect * tanHalfFov), 0, 0, 0),\r\n            new Vector4(0, -1 / tanHalfFov, 0, 0),\r\n            new Vector4(0, 0, -(far + near) / (far - near), -(2 * far * near) / (far - near)),\r\n            new Vector4(0, 0, -1, 0)\r\n        );\r\n        return mat;\r\n    }\r\n\r\n    public static get identity(): Matrix4x4 {\r\n        let m = new Matrix4x4();\r\n        m.matrix[0][0] = 1;\r\n        m.matrix[1][1] = 1;\r\n        m.matrix[2][2] = 1;\r\n        m.matrix[3][3] = 1;\r\n        return m;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\n\r\nexport class Quaternion {\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n    public z: number = 0;\r\n    public w: number = 0;\r\n\r\n    public constructor();\r\n    public constructor(x: number, y: number, z: number, w: number);\r\n    public constructor(angle: number, axis: Vector3);\r\n    public constructor(euler: Vector3);\r\n    public constructor() {\r\n        if (arguments.length == 4) {\r\n            this.x = arguments[0];\r\n            this.y = arguments[1];\r\n            this.z = arguments[2];\r\n            this.w = arguments[3];\r\n        }\r\n        else if (arguments.length == 2) {\r\n            this.rotateAround(arguments[0], arguments[1]);\r\n        }\r\n        else if (arguments.length == 1) {\r\n            this.eulerAngles = arguments[0];\r\n        }\r\n        else {\r\n            this.x = this.y = this.z = 0;\r\n            this.w = 1;\r\n        }\r\n    }\r\n\r\n    public get eulerAngles(): Vector3 {\r\n        return Matrix4x4.getRotateMatrixByQuaternion(this).getEulerAngles();\r\n    }\r\n\r\n    public set eulerAngles(e: Vector3) {\r\n        var q = Matrix4x4.getRotateMatrixByEulerAngles(e).getRotate();\r\n        this.w = q.w;\r\n        this.x = q.x;\r\n        this.y = q.y;\r\n        this.z = q.z;\r\n    }\r\n\r\n    public rotateAround(angle: number, axis: Vector3): Quaternion {\r\n        let q = Quaternion.angleAxis(angle, axis);\r\n        this.x = q.x;\r\n        this.y = q.y;\r\n        this.z = q.z;\r\n        this.w = q.w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * @zh 向量四元数乘法\r\n    */\r\n    public transformQuat(a: Vector3): Vector3 {\r\n        // benchmarks: http://jsperf.com/quaternion-transform-Vec3-implementations\r\n\r\n        let out = new Vector3();\r\n        let q = this;\r\n\r\n        // calculate quat * vec\r\n        const ix = q.w * a.x + q.y * a.z - q.z * a.y;\r\n        const iy = q.w * a.y + q.z * a.x - q.x * a.z;\r\n        const iz = q.w * a.z + q.x * a.y - q.y * a.x;\r\n        const iw = -q.x * a.x - q.y * a.y - q.z * a.z;\r\n\r\n        // calculate result * inverse quat\r\n        out.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\r\n        out.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\r\n        out.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\r\n        return out;\r\n    }\r\n\r\n    public clone(): Quaternion {\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    /**\r\n     * @zh 四元数球面插值\r\n     */\r\n    public static slerp(a: Quaternion, b: Quaternion, t: number): Quaternion {\r\n        // benchmarks:\r\n        //    http://jsperf.com/quaternion-slerp-implementations\r\n\r\n        let out = new Quaternion();\r\n\r\n        let scale0 = 0;\r\n        let scale1 = 0;\r\n\r\n        // calc cosine\r\n        let cosom = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n        // adjust signs (if necessary)\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            b.x = -b.x;\r\n            b.y = -b.y;\r\n            b.z = -b.z;\r\n            b.w = -b.w;\r\n        }\r\n        // calculate coefficients\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp)\r\n            const omega = Math.acos(cosom);\r\n            const sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close\r\n            //  ... so we can do a linear interpolation\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values\r\n        out.x = scale0 * a.x + scale1 * b.x;\r\n        out.y = scale0 * a.y + scale1 * b.y;\r\n        out.z = scale0 * a.z + scale1 * b.z;\r\n        out.w = scale0 * a.w + scale1 * b.w;\r\n\r\n        return out;\r\n    }\r\n\r\n    public static dot(a: Quaternion, b: Quaternion): number {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n    }\r\n\r\n    public static angleAxis(angle: number, axis: Vector3): Quaternion {\r\n        let res = new Quaternion();\r\n\r\n        angle = Math.PI * angle / 180;\r\n        angle *= 0.5;\r\n        const sin = Math.sin(angle);\r\n\r\n        res.x = axis.x * sin;\r\n        res.y = axis.y * sin;\r\n        res.z = axis.z * sin;\r\n        res.w = Math.cos(angle);\r\n\r\n        return res;\r\n    }\r\n\r\n    public static get identity(): Quaternion {\r\n        return new Quaternion(0, 0, 0, 1);\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Vector4 } from \"./Vector4\";\r\n\r\nexport class Vector2 {\r\n\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public get width(): number { return this.x; }\r\n    public get height(): number { return this.y; }\r\n\r\n    public constructor();\r\n    public constructor(x: number, y: number);\r\n    public constructor(v: Vector3);\r\n    public constructor(v: Vector4)\r\n    public constructor() {\r\n        if (arguments[0] instanceof Vector3) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n        }\r\n        else if (arguments[0] instanceof Vector4) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n        }\r\n        else if (arguments.length == 2) {\r\n            this.x = arguments[0];\r\n            this.y = arguments[1];\r\n        }\r\n        else {\r\n            this.x = this.y = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n        OPERATIONS ON VECTOR\r\n     */\r\n\r\n    public add(v: Vector2): Vector2;\r\n    public add(x: number, y: number): Vector2;\r\n    add() {\r\n        if (arguments[0] instanceof Vector2) {\r\n            this.x += arguments[0].x;\r\n            this.y += arguments[0].y;\r\n        } else {\r\n            this.x += arguments[0];\r\n            this.y += arguments[1];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public subtract(v: Vector2): Vector2;\r\n    public subtract(x: number, y: number): Vector2;\r\n    subtract() {\r\n        if (arguments[0] instanceof Vector2) {\r\n            this.x -= arguments[0].x;\r\n            this.y -= arguments[0].y;\r\n        } else {\r\n            this.x -= arguments[0];\r\n            this.y -= arguments[1];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public multiply(d: number): Vector2 {\r\n        this.x *= d;\r\n        this.y *= d;\r\n        return this;\r\n    }\r\n\r\n    public divide(d: number): Vector2 {\r\n        this.x /= d;\r\n        this.y /= d;\r\n        return this;\r\n    }\r\n\r\n    public scale(v: Vector2): Vector2 {\r\n        this.x *= v.x;\r\n        this.y *= v.y;\r\n        return this;\r\n    }\r\n\r\n    public negate(): Vector2 {\r\n        return this.multiply(-1);\r\n    }\r\n\r\n    public normalize(): Vector2 {\r\n        var length = this.magnitude;\r\n\r\n        if (length === 0)\r\n            return new Vector2();\r\n\r\n        return this.divide(length);\r\n    }\r\n\r\n    public get magnitude(): number {\r\n        return Math.sqrt(Vector2.dot(this, this));\r\n    }\r\n\r\n    public get sqrMagnitude(): number {\r\n        return Vector2.dot(this, this);\r\n    }\r\n\r\n    /*\r\n        ADDITIONAL FUNCTIONS\r\n     */\r\n\r\n    public clone(): Vector2 {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    public equals(v: Vector2): boolean {\r\n        return v.x == this.x && v.y == this.y;\r\n    }\r\n\r\n    public toString(): string {\r\n        return \"[\" + this.x + \", \" + this.y + \"]\";\r\n    }\r\n\r\n    /*\r\n        STATIC FUNCTIONS\r\n     */\r\n\r\n    public static lerp(v1: Vector2, v2: Vector2, t: number): Vector2 {\r\n        var v = new Vector2();\r\n        v.x = v1.x + t * (v2.x - v1.x);\r\n        v.y = v1.y + t * (v2.y - v1.y);\r\n        return v;\r\n    }\r\n\r\n    public static dot(v1: Vector2, v2: Vector2): number {\r\n        return (v1.x * v2.x + v1.y * v2.y);\r\n    }\r\n\r\n    public static cross(v1: Vector2, v2: Vector2): number {\r\n        return (v1.x * v2.y - v1.y * v2.x);\r\n    }\r\n\r\n    public static distance(v1: Vector2, v2: Vector2): number {\r\n        var x = v2.x - v1.x;\r\n        var y = v2.y - v1.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    public static angle(v1: Vector2, v2: Vector2): number {\r\n        return Math.acos(Vector2.dot(v1, v2) / (v1.magnitude * v2.magnitude));\r\n    }\r\n\r\n    /*\r\n        STATIC VARIABLES\r\n     */\r\n\r\n    public static get ZERO() {\r\n        return new Vector2(0, 0);\r\n    }\r\n\r\n    public static get ONE() {\r\n        return new Vector2(1, 1);\r\n    }\r\n\r\n    public static get RIGHT() {\r\n        return new Vector2(1, 0);\r\n    }\r\n\r\n    public static get LEFT() {\r\n        return new Vector2(-1, 0);\r\n    }\r\n\r\n    public static get UP() {\r\n        return new Vector2(0, 1);\r\n    }\r\n\r\n    public static get DOWN() {\r\n        return new Vector2(0, -1);\r\n    }\r\n}","import { Vector2 } from \"./Vector2\";\r\nimport { Vector4 } from \"./Vector4\";\r\n\r\nexport class Vector3 {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    public constructor();\r\n    public constructor(x: number, y: number, z: number);\r\n    public constructor(v: Vector2);\r\n    public constructor(v: Vector4)\r\n    public constructor() {\r\n        if (arguments[0] instanceof Vector2) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n            this.z = 0;\r\n        }\r\n        else if (arguments[0] instanceof Vector4) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n            this.z = arguments[0].z;\r\n        }\r\n        else if (arguments.length == 3) {\r\n            this.x = arguments[0];\r\n            this.y = arguments[1];\r\n            this.z = arguments[2];\r\n        }\r\n        else {\r\n            this.x = this.y = this.z = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     OPERATIONS ON VECTOR\r\n     */\r\n\r\n    public add(v: Vector3): Vector3;\r\n    public add(x: number, y: number, z: number): Vector3;\r\n    add() {\r\n        if (arguments[0] instanceof Vector3) {\r\n            this.x += arguments[0].x;\r\n            this.y += arguments[0].y;\r\n            this.z += arguments[0].z;\r\n        } else {\r\n            this.x += arguments[0];\r\n            this.y += arguments[1];\r\n            this.z += arguments[2];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public subtract(v: Vector3): Vector3;\r\n    public subtract(x: number, y: number, z: number): Vector3;\r\n    subtract() {\r\n        if (arguments[0] instanceof Vector3) {\r\n            this.x -= arguments[0].x;\r\n            this.y -= arguments[0].y;\r\n            this.z -= arguments[0].z;\r\n        } else {\r\n            this.x -= arguments[0];\r\n            this.y -= arguments[1];\r\n            this.z -= arguments[2];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public multiply(d: number): Vector3 {\r\n        this.x *= d;\r\n        this.y *= d;\r\n        this.z *= d;\r\n        return this;\r\n    }\r\n\r\n    public divide(d: number): Vector3 {\r\n        this.x /= d;\r\n        this.y /= d;\r\n        this.z /= d;\r\n        return this;\r\n    }\r\n\r\n    public scale(v: Vector3): Vector3 {\r\n        this.x *= v.x;\r\n        this.y *= v.y;\r\n        this.z *= v.z;\r\n        return this;\r\n    }\r\n\r\n    public negate(): Vector3 {\r\n        return this.multiply(-1);\r\n    }\r\n\r\n    public normalize(): Vector3 {\r\n        var length = this.magnitude;\r\n\r\n        if (length === 0)\r\n            return new Vector3();\r\n\r\n        return this.divide(length);\r\n    }\r\n\r\n    public dot(v: Vector3): number {\r\n        return Vector3.dot(this, v);\r\n    }\r\n\r\n    public cross(v: Vector3): Vector3 {\r\n        return Vector3.cross(this, v);\r\n    }\r\n\r\n    public get magnitude(): number {\r\n        return Math.sqrt(Vector3.dot(this, this));\r\n    }\r\n\r\n    public get sqrMagnitude(): number {\r\n        return Vector3.dot(this, this);\r\n    }\r\n\r\n    /*\r\n     ADDITIONAL FUNCTIONS\r\n     */\r\n\r\n    public clone(): Vector3 {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n\r\n    public equals(v: Vector3): boolean {\r\n        return v.x == this.x && v.y == this.y && v.z == this.z;\r\n    }\r\n\r\n    public toString(): string {\r\n        return \"[\" + this.x + \", \" + this.y + \", \" + this.z + \"]\";\r\n    }\r\n\r\n    /*\r\n     STATIC FUNCTIONS\r\n     */\r\n\r\n    public static lerp(v1: Vector3, v2: Vector3, t: number): Vector3 {\r\n        var v = new Vector3();\r\n        v.x = v1.x + t * (v2.x - v1.x);\r\n        v.y = v1.y + t * (v2.y - v1.y);\r\n        v.z = v1.z + t * (v2.z - v1.z);\r\n        return v;\r\n    }\r\n\r\n    public static multiply(v: Vector3, s: number): Vector3 {\r\n        return new Vector3(v.x * s, v.y * s, v.z * s);\r\n    } \r\n\r\n    public static add(v1: Vector3, v2: Vector3): Vector3 {\r\n        return new Vector3(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\r\n    }\r\n\r\n    public static subtract(v1: Vector3, v2: Vector3): Vector3 {\r\n        return new Vector3(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);\r\n    }\r\n\r\n    public static dot(v1: Vector3, v2: Vector3): number {\r\n        return (v1.x * v2.x + v1.y * v2.y + v1.z * v2.z);\r\n    }\r\n\r\n    public static cross(v1: Vector3, v2: Vector3): Vector3 {\r\n        var x = v1.y * v2.z - v1.z * v2.y;\r\n        var y = v1.z * v2.x - v1.x * v2.z;\r\n        var z = v1.x * v2.y - v1.y * v2.x;\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    public static distance(v1: Vector3, v2: Vector3): number {\r\n        var x = v2.x - v1.x;\r\n        var y = v2.y - v1.y;\r\n        var z = v2.z - v1.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    public static difference(v1: Vector3, v2: Vector3): Vector3 {\r\n        var dest = new Vector3();\r\n\r\n        dest.x = v1.x - v2.x\r\n        dest.y = v1.y - v2.y\r\n        dest.z = v1.z - v2.z\r\n\r\n        return dest\r\n    }\r\n\r\n    public static angle(v1: Vector3, v2: Vector3): number {\r\n        return Math.acos(Vector3.dot(v1, v2) / (v1.magnitude * v2.magnitude));\r\n    }\r\n\r\n    /*\r\n     STATIC VARIABLES\r\n     */\r\n\r\n    public static get ZERO() {\r\n        return new Vector3(0, 0, 0);\r\n    }\r\n\r\n    public static get ONE() {\r\n        return new Vector3(1, 1, 1);\r\n    }\r\n\r\n    public static get RIGHT() {\r\n        return new Vector3(1, 0, 0);\r\n    }\r\n\r\n    public static get LEFT() {\r\n        return new Vector3(-1, 0, 0);\r\n    }\r\n\r\n    public static get UP() {\r\n        return new Vector3(0, 1, 0);\r\n    }\r\n\r\n    public static get DOWN() {\r\n        return new Vector3(0, -1, 0);\r\n    }\r\n\r\n    public static get FORWARD() {\r\n        return new Vector3(0, 0, 1);\r\n    }\r\n\r\n    public static get BACK() {\r\n        return new Vector3(0, 0, -1);\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\n\r\nexport class Vector4 {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n    public w: number;\r\n\r\n    public get r(): number { return this.x; }\r\n    public get g(): number { return this.y; }\r\n    public get b(): number { return this.z; }\r\n    public get a(): number { return this.w; }\r\n\r\n    public get vector3(): Vector3 { return new Vector3(this); }\r\n\r\n    public constructor();\r\n    public constructor(x: number, y: number, z: number, w: number);\r\n    public constructor(v: Vector2);\r\n    public constructor(v: Vector3);\r\n    public constructor(v: Vector3, w: number);\r\n    public constructor() {\r\n        if (arguments[0] instanceof Vector2) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n            this.z = this.w = 0;\r\n        }\r\n        else if (arguments[0] instanceof Vector3) {\r\n            this.x = arguments[0].x;\r\n            this.y = arguments[0].y;\r\n            this.z = arguments[0].z;\r\n            this.w = arguments.length == 2 ? arguments[1] : 0;\r\n        }\r\n        else if (arguments.length == 4) {\r\n            this.x = arguments[0];\r\n            this.y = arguments[1];\r\n            this.z = arguments[2];\r\n            this.w = arguments[3];\r\n        }\r\n        else {\r\n            this.x = this.y = this.z = this.w = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     OPERATIONS ON VECTOR\r\n     */\r\n\r\n    public add(v: Vector4): Vector4;\r\n    public add(x: number, y: number, z: number, w: number): Vector4;\r\n    add() {\r\n        if (arguments[0] instanceof Vector4) {\r\n            this.x += arguments[0].x;\r\n            this.y += arguments[0].y;\r\n            this.z += arguments[0].z;\r\n            this.w += arguments[0].w;\r\n        } else {\r\n            this.x += arguments[0];\r\n            this.y += arguments[1];\r\n            this.z += arguments[2];\r\n            this.w += arguments[3];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public subtract(v: Vector4): Vector4;\r\n    public subtract(x: number, y: number, z: number, w: number): Vector4;\r\n    subtract() {\r\n        if (arguments[0] instanceof Vector4) {\r\n            this.x -= arguments[0].x;\r\n            this.y -= arguments[0].y;\r\n            this.z -= arguments[0].z;\r\n            this.w -= arguments[0].w;\r\n        } else {\r\n            this.x -= arguments[0];\r\n            this.y -= arguments[1];\r\n            this.z -= arguments[2];\r\n            this.w -= arguments[3];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public multiply(d: number): Vector4 {\r\n        this.x *= d;\r\n        this.y *= d;\r\n        this.z *= d;\r\n        this.w *= d;\r\n        return this;\r\n    }\r\n\r\n    public divide(d: number): Vector4 {\r\n        this.x /= d;\r\n        this.y /= d;\r\n        this.z /= d;\r\n        this.w /= d;\r\n        return this;\r\n    }\r\n\r\n    public scale(v: Vector4): Vector4 {\r\n        this.x *= v.x;\r\n        this.y *= v.y;\r\n        this.z *= v.z;\r\n        this.w *= v.w;\r\n        return this;\r\n    }\r\n\r\n    public negate(): Vector4 {\r\n        return this.multiply(-1);\r\n    }\r\n\r\n    public normalize(): Vector4 {\r\n        var length = this.magnitude;\r\n\r\n        if (length === 0)\r\n            return new Vector4();\r\n\r\n        return this.divide(length);\r\n    }\r\n\r\n    public get magnitude(): number {\r\n        return Math.sqrt(Vector4.dot(this, this));\r\n    }\r\n\r\n    public get sqrMagnitude(): number {\r\n        return Vector4.dot(this, this);\r\n    }\r\n\r\n    /*\r\n     ADDITIONAL FUNCTIONS\r\n     */\r\n\r\n    public clone(): Vector4 {\r\n        return new Vector4(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    public equals(v: Vector4): boolean {\r\n        return v.x == this.x && v.y == this.y && v.z == this.z && v.w == this.w;\r\n    }\r\n\r\n    public toString(): string {\r\n        return \"[\" + this.x + \", \" + this.y + \", \" + this.z + \", \" + this.w + \"]\";\r\n    }\r\n\r\n    /*\r\n     STATIC FUNCTIONS\r\n     */\r\n\r\n    public static lerp(v1: Vector4, v2: Vector4, t: number): Vector4 {\r\n        var v = new Vector4();\r\n        v.x = v1.x + t * (v2.x - v1.x);\r\n        v.y = v1.y + t * (v2.y - v1.y);\r\n        v.z = v1.z + t * (v2.z - v1.z);\r\n        v.w = v1.w + t * (v2.w - v1.w);\r\n        return v;\r\n    }\r\n\r\n    public static dot(v1: Vector4, v2: Vector4): number {\r\n        return (v1.x * v2.x + v1.y * v2.y + v1.z * v2.z + v1.w * v2.w);\r\n    }\r\n\r\n    public static distance(v1: Vector4, v2: Vector4): number {\r\n        return Math.sqrt(Vector4.dot(v1, v2));\r\n    }\r\n\r\n    /*\r\n     STATIC VARIABLES\r\n     */\r\n\r\n    public static get ZERO() {\r\n        return new Vector4(0, 0, 0, 0);\r\n    }\r\n\r\n    public static get ONE() {\r\n        return new Vector4(1, 1, 1, 1);\r\n    }\r\n}","import { Bounds } from \"../Math/Bounds\";\r\nimport { Vector2 } from \"../Math/Vector2\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Vector4 } from \"../Math/Vector4\";\r\n\r\nexport class Mesh {\r\n    public bounds: Bounds[];                       // 包围盒\r\n    public material: string[];                     // 材质\r\n    public triangles: number[];                    // 三角形\r\n    public faceNormals: Vector3[];                 // 面法线\r\n    public vertices: Vector3[];                    // 顶点\r\n    public uv: Vector2[];                          // UV\r\n    public normals: Vector3[];                     // 法线\r\n    public tangents: Vector4[];                    // 切线，可从模型中获取或通过法线计算得到\r\n    public subMeshes: SubMesh[];                   // 子网格\r\n\r\n    // 调试信息\r\n    public _debug_faceNormalLine: Line[] = [];\r\n\r\n    public constructor() {\r\n        this.bounds = [];\r\n        this.material = [];\r\n        this.triangles = [];\r\n        this.faceNormals = [];\r\n        this.vertices = [];\r\n        this.uv = [];\r\n        this.normals = [];\r\n        this.tangents = [];\r\n        this.subMeshes = [];\r\n    }\r\n\r\n    // 检查网格是否有效\r\n    public checkValid(): Boolean {\r\n        // 检查定点数、uv数、法线数量是否不为零并且相等，同时三角形数量应该是三的倍数\r\n        return this.vertices.length !== 0\r\n            && this.vertices.length === this.uv.length\r\n            && this.vertices.length === this.normals.length\r\n            && this.triangles.length !== 0\r\n            && this.triangles.length % 3 === 0;\r\n    }\r\n\r\n    // 重新计算包围盒\r\n    public recalculateBounds() {\r\n        //TODO\r\n    }\r\n}\r\n\r\nexport class SubMesh {\r\n    public vertexCount: number;\r\n    public firstVertex: number;\r\n    public indexCount: number;\r\n    public indexStart: number;\r\n    public bounds: Bounds;\r\n    public material: string;\r\n\r\n    public constructor() {\r\n        this.vertexCount = 0;\r\n        this.firstVertex = 0;\r\n        this.indexCount = 0;\r\n        this.indexStart = 0;\r\n        this.bounds = new Bounds();\r\n        this.material = \"\";\r\n    }\r\n}\r\n\r\nexport class Line {\r\n    public start: Vector3;\r\n    public end: Vector3;\r\n\r\n    public constructor(start: Vector3, end: Vector3) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}","import { Color } from \"../Utils/Color\";\r\nimport { Vector2 } from \"../Math/Vector2\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Vector4 } from \"../Math/Vector4\";\r\nimport { Transform } from \"../Core/Transform\";\r\nimport { Renderer } from \"../Component/Renderer\";\r\nimport { MeshRenderer } from \"../Component/MeshRenderer\";\r\nimport { Camera } from \"../Component/Camera\";\r\nimport { Engine, EngineConfig } from \"../Core/Engine\";\r\nimport { Logger } from \"../Utils/Logger\";\r\nimport { Mesh } from \"./Mesh\";\r\nimport { Time } from \"../Core/Time\";\r\n\r\nenum DrawMode {\r\n    Wireframe = 1,\r\n    Point = 2,\r\n    UV = 4,\r\n    Normal = 8,\r\n    Shader = 16\r\n}\r\n\r\nexport class RasterizationPipeline {\r\n    public drawMode: DrawMode = DrawMode.Normal;\r\n    private frameBuffer: Uint32Array;\r\n    private depthBuffer: Uint32Array;\r\n\r\n    constructor(frameBuffer: Uint32Array) {\r\n        this.frameBuffer = frameBuffer;\r\n        this.depthBuffer = new Uint32Array(EngineConfig.canvasWidth * EngineConfig.canvasHeight);\r\n    }\r\n\r\n    public Render() {\r\n        this.Clear(Color.BLACK);\r\n\r\n        // 获取场景中的所有根游戏对象并渲染\r\n        const rootObjects = Engine.sceneManager.getActiveScene()?.getRootGameObjects();\r\n        if (rootObjects) {\r\n            for (const gameObject of rootObjects) {\r\n                // 显式指定类型参数\r\n                const renders = gameObject.getComponentsInChildren(Renderer);\r\n                for (const render of renders) {\r\n                    this.DrawObject(render);\r\n                    Logger.log(render.gameObject.name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region 基础绘制接口\r\n\r\n    public Clear(color: number) {\r\n        // 使用 fill 方法替代循环，性能更好\r\n        this.frameBuffer.fill(color);\r\n        // 或者使用循环，但性能较差\r\n        // for (let x = 0; x < this.canvasWidth; x++) {\r\n        //     for (let y = 0; y < this.canvasHeight; y++) {\r\n        //         this.SetPixel(x, y, color);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    public DrawPixel(x: number, y: number, color: number) {\r\n        // 绘制到屏幕上的像素应该是整数的\r\n        // 优化: 使用位运算代替Math.floor，提升性能\r\n        x = (x | 0);\r\n        y = (y | 0);\r\n        // x = Math.floor(x);\r\n        // y = Math.floor(y);\r\n\r\n        if (x < 0 || x >= EngineConfig.canvasWidth || y < 0 || y >= EngineConfig.canvasHeight) {\r\n            return;\r\n        }\r\n\r\n        this.frameBuffer[y * EngineConfig.canvasWidth + x] = color;\r\n    }\r\n\r\n    public DrawLine(x1: number, y1: number, x2: number, y2: number, color1: number, color2?: number) {\r\n        // 使用位运算优化边界检查\r\n        // 画线前要进行边检查，确保线的两端点都在屏幕内，如果线的范围很长并且不在屏幕范围内，都进行计算会造成浪费大量的资源，裁剪掉超出的部分\r\n        const w = EngineConfig.canvasWidth;\r\n        const h = EngineConfig.canvasHeight;\r\n        if (((x1 | y1) < 0) || (x1 >= w) || (y1 >= h) || ((x2 | y2) < 0) || (x2 >= w) || (y2 >= h)) {\r\n            //TODO:裁剪掉超出屏幕的部分\r\n            return;\r\n        }\r\n\r\n        // 取整\r\n        x1 = x1 | 0;\r\n        y1 = y1 | 0;\r\n        x2 = x2 | 0;\r\n        y2 = y2 | 0;\r\n\r\n        const dx = x2 - x1;\r\n        const dy = y2 - y1;\r\n        const length = Math.max(Math.abs(dx), Math.abs(dy));\r\n\r\n        // 为何要区分斜率是否偏水平还是垂直呢？因为如果不区分，例如当斜率大于1时，会导致直线绘制不连续，因为y会跳变，而不是连续的增加。\r\n        // 只有斜率刚好为1时，x跟y才是连续同步自增的，x+1，则y也+1\r\n        // 所以，当斜率大于1时，我们需要使用y作为循环变量，而当斜率小于1时，我们需要使用x作为循环变量。\r\n        // 举个极端例子，当斜率为0时，直线就是一条垂直直线，如果这时候还用x作为循环变量，则会导致这条直线上所有y点都对应一个x，也就是说这条线变成一个点了。\r\n\r\n        // 斜率小于1，直线偏水平情况，使用x作为循环变量\r\n        if (Math.abs(dx) > Math.abs(dy)) {\r\n            // 下面的循环绘制函数是从左往右的，这里要确保结束点在开始点的右边\r\n            if (x2 < x1) {\r\n                [x1, y1, x2, y2] = [x2, y2, x1, y1];\r\n                // 同时交换颜色\r\n                if (color2 !== undefined) [color1, color2] = [color2, color1];\r\n            }\r\n\r\n            // 斜率\r\n            const a = dy / dx;\r\n            // 截距（y=ax+b，b=y-ax）\r\n            // const b = y1 - a * x1;\r\n            let y = y1;\r\n            // 绘制直线\r\n            for (let x = x1; x <= x2; x++) {\r\n                // 计算插值因子 (0 到 1)\r\n                const t = length > 0 ? (x - x1) / length : 0;\r\n                // 根据是否有第二个颜色决定使用单一颜色还是插值\r\n                const color = color2 !== undefined ? this.interpolateColor(color1, color2, t) : color1;\r\n\r\n                this.DrawPixel(x, y, color);\r\n                // 直线公式y=ax+b，这里不必计算这个公式，因为当x加1自增时，y也会加a，所以可以直接用y+a代替ax+b，算是一个性能优化点\r\n                // y = a * x + b;\r\n                y = y + a;\r\n            }\r\n\r\n            // 或\r\n            // const ys = this.Interpolate(x1, y1, x2, y2);\r\n            // for (let x = x1; x <= x2; x++) {\r\n            //     this.DrawPixel(x, ys[x - x1], color);\r\n            // }\r\n        }\r\n        // 斜率大于1，直线偏垂直情况，使用y作为循环变量\r\n        else {\r\n            if (y2 < y1) {\r\n                [x1, y1, x2, y2] = [x2, y2, x1, y1];\r\n                // 同时交换颜色\r\n                if (color2 !== undefined) [color1, color2] = [color2, color1];\r\n            }\r\n\r\n            const a = dx / dy;\r\n            let x = x1;\r\n            for (let y = y1; y <= y2; y++) {\r\n                // 计算插值因子 (0 到 1)\r\n                const t = length > 0 ? (y - y1) / length : 0;\r\n                // 根据是否有第二个颜色决定使用单一颜色还是插值\r\n                const color = color2 !== undefined ? this.interpolateColor(color1, color2, t) : color1;\r\n\r\n                this.DrawPixel(x, y, color);\r\n                x = x + a;\r\n            }\r\n\r\n            // 或\r\n            // const xs = this.Interpolate(y1, x1, y2, x2);\r\n            // for (let y = y1; y <= y2; y++) {\r\n            //     this.DrawPixel(xs[y - y1], y, color);\r\n            // }\r\n        }\r\n    }\r\n\r\n    public DrawTriangle(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, color: number) {\r\n        this.DrawLine(x1, y1, x2, y2, color);\r\n        this.DrawLine(x2, y2, x3, y3, color);\r\n        this.DrawLine(x3, y3, x1, y1, color);\r\n    }\r\n\r\n    public DrawTriangleFilled(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, color: number) {\r\n        // 注：以下提到的长边，特指y轴跨度最长的边，而不是实际上的边长\r\n\r\n        // 画三角形前要进行边检查，确保三角形的三个点都在屏幕内，如果有点超出屏幕范围，则裁剪，并生成新的三角形\r\n        const w = EngineConfig.canvasWidth;\r\n        const h = EngineConfig.canvasHeight;\r\n        if (((x1 | y1) < 0) || (x1 >= w) || (y1 >= h) || ((x2 | y2) < 0) || (x2 >= w) || (y2 >= h) || ((x3 | y3) < 0) || (x3 >= w) || (y3 >= h)) {\r\n            //TODO:裁剪掉超出屏幕的部分\r\n            return;\r\n        }\r\n\r\n        // 实际绘制到屏幕上的点，必须是整数，取整一下。使用位运算代替Math.floor，提升性能\r\n        x1 = x1 | 0;\r\n        y1 = y1 | 0;\r\n        x2 = x2 | 0;\r\n        y2 = y2 | 0;\r\n        x3 = x3 | 0;\r\n        y3 = y3 | 0;\r\n\r\n        // 对点进行排序，使得y1<=y2<=y3，即可确定三角形的长边为L13，L12和L23则是另外两条短边\r\n        if (y1 > y2) [x1, y1, x2, y2] = [x2, y2, x1, y1];\r\n        if (y1 > y3) [x1, y1, x3, y3] = [x3, y3, x1, y1];\r\n        if (y2 > y3) [x2, y2, x3, y3] = [x3, y3, x2, y2];\r\n\r\n        // 获取3条边的点坐标合集\r\n        const p12 = this.Interpolate(y1, x1, y2, x2);\r\n        const p23 = this.Interpolate(y2, x2, y3, x3);\r\n        const p13 = this.Interpolate(y1, x1, y3, x3);\r\n\r\n        // 拼合两条短边为一条长边（先移除第一条边的最后一个数据，避免重复）\r\n        // 现在变成2条长边，L13和L123\r\n        p12.pop();\r\n        const p123 = p12.concat(p23);\r\n\r\n        // 判断L13和L123哪条长边是左哪条是右，都取数组中间的点，判断谁左谁右即可。\r\n        // 使用位运算代替Math.floor，提升性能\r\n        // const m = Math.floor(p123.length / 2);\r\n        const m = (p123.length >> 1) | 0;\r\n        let pLeft = p123;\r\n        let pRight = p13;\r\n        if (p13[m] < p123[m]) {\r\n            pLeft = p13;\r\n            pRight = p123;\r\n        }\r\n\r\n        // 绘制水平线段\r\n        for (let y = y1; y <= y3; y++) {\r\n            for (let x = pLeft[y - y1]; x <= pRight[y - y1]; x++) {\r\n                this.DrawPixel(x, y, color);\r\n            }\r\n        }\r\n    }\r\n\r\n    public DrawTriangleFilledWithVertexColor(\r\n        x1: number, y1: number,\r\n        x2: number, y2: number,\r\n        x3: number, y3: number,\r\n        color1: number, color2: number, color3: number\r\n    ) {\r\n        // 画三角形前要进行边检查，确保三角形的三个点都在屏幕内，如果有点超出屏幕范围，则裁剪，并生成新的三角形\r\n        const w = EngineConfig.canvasWidth;\r\n        const h = EngineConfig.canvasHeight;\r\n        if (((x1 | y1) < 0) || (x1 >= w) || (y1 >= h) || ((x2 | y2) < 0) || (x2 >= w) || (y2 >= h) || ((x3 | y3) < 0) || (x3 >= w) || (y3 >= h)) {\r\n            //TODO:裁剪掉超出屏幕的部分\r\n            return;\r\n        }\r\n\r\n        // 实际绘制到屏幕上的点，必须是整数，取整一下。使用位运算代替Math.floor，提升性能\r\n        x1 = x1 | 0;\r\n        y1 = y1 | 0;\r\n        x2 = x2 | 0;\r\n        y2 = y2 | 0;\r\n        x3 = x3 | 0;\r\n        y3 = y3 | 0;\r\n\r\n        // 对点按Y坐标排序，确保y1 <= y2 <= y3\r\n        if (y1 > y2) [x1, y1, x2, y2, color1, color2] = [x2, y2, x1, y1, color2, color1];\r\n        if (y1 > y3) [x1, y1, x3, y3, color1, color3] = [x3, y3, x1, y1, color3, color1];\r\n        if (y2 > y3) [x2, y2, x3, y3, color2, color3] = [x3, y3, x2, y2, color3, color2];\r\n\r\n        // 提取RGB分量\r\n        const c1 = Color.FromUint32(color1);\r\n        const c2 = Color.FromUint32(color2);\r\n        const c3 = Color.FromUint32(color3);\r\n\r\n        // 插值函数，颜色1与颜色2在d1-d2的范围内均匀插值\r\n        const interpolateColor = (d1: number, r1: number, g1: number, b1: number, a1: number,\r\n            d2: number, r2: number, g2: number, b2: number, a2: number) => {\r\n            // 预分配数组大小\r\n            // 使用位运算代替Math.floor和Math.abs，提升性能\r\n            // const dx = Math.abs(Math.floor(d2 - d1));\r\n            const dx = ((d2 > d1 ? d2 - d1 : d1 - d2) | 0);\r\n            const result = new Array(dx + 1);\r\n\r\n            // 计算步长\r\n            const invDelta = 1 / (d2 - d1);\r\n            const rStep = (r2 - r1) * invDelta;\r\n            const gStep = (g2 - g1) * invDelta;\r\n            const bStep = (b2 - b1) * invDelta;\r\n            const aStep = (a2 - a1) * invDelta;\r\n\r\n            let r = r1, g = g1, b = b1, a = a1;\r\n            for (let i = 0; i <= dx; i++) {\r\n                result[i] = { r, g, b, a };\r\n                r += rStep;\r\n                g += gStep;\r\n                b += bStep;\r\n                a += aStep;\r\n            }\r\n            return result;\r\n        };\r\n\r\n        // 插值三条边的坐标和颜色\r\n        const p12 = this.Interpolate(y1, x1, y2, x2);\r\n        const p12Colors = interpolateColor(y1, c1.r, c1.g, c1.b, c1.a, y2, c2.r, c2.g, c2.b, c2.a);\r\n\r\n        const p23 = this.Interpolate(y2, x2, y3, x3);\r\n        const p23Colors = interpolateColor(y2, c2.r, c2.g, c2.b, c2.a, y3, c3.r, c3.g, c3.b, c3.a);\r\n\r\n        const p13 = this.Interpolate(y1, x1, y3, x3);\r\n        const p13Colors = interpolateColor(y1, c1.r, c1.g, c1.b, c1.a, y3, c3.r, c3.g, c3.b, c3.a);\r\n\r\n        // 合并两条短边\r\n        p12.pop();\r\n        const p123 = p12.concat(p23);\r\n        const p123Colors = p12Colors.concat(p23Colors);\r\n\r\n        // 确定左右边界\r\n        // const m = Math.floor(p123.length / 2);\r\n        const m = (p123.length >> 1) | 0;\r\n        let leftPoints = p123;\r\n        let rightPoints = p13;\r\n        let leftColors = p123Colors;\r\n        let rightColors = p13Colors;\r\n\r\n        if (p13[m] < p123[m]) {\r\n            leftPoints = p13;\r\n            rightPoints = p123;\r\n            leftColors = p13Colors;\r\n            rightColors = p123Colors;\r\n        }\r\n\r\n        // 绘制水平线段，并进行颜色插值\r\n        for (let y = y1; y <= y3; y++) {\r\n            const idx = y - y1;\r\n            const xStart = leftPoints[idx];\r\n            const xEnd = rightPoints[idx];\r\n\r\n            const leftColor = leftColors[idx];\r\n            const rightColor = rightColors[idx];\r\n\r\n            // 预计算颜色差值\r\n            const rDiff = rightColor.r - leftColor.r;\r\n            const gDiff = rightColor.g - leftColor.g;\r\n            const bDiff = rightColor.b - leftColor.b;\r\n            const aDiff = rightColor.a - leftColor.a;\r\n\r\n            // 步长和颜色增量\r\n            const invLength = 1 / ((xEnd - xStart) + 1);\r\n            const rStep = rDiff * invLength;\r\n            const gStep = gDiff * invLength;\r\n            const bStep = bDiff * invLength;\r\n            const aStep = aDiff * invLength;\r\n\r\n            // 初始颜色值\r\n            let r = leftColor.r;\r\n            let g = leftColor.g;\r\n            let b = leftColor.b;\r\n            let a = leftColor.a;\r\n\r\n            // 水平方向颜色插值\r\n            for (let x = xStart; x <= xEnd; x++) {\r\n                const finalColor = ((a | 0) << 24) | ((b | 0) << 16) | ((g | 0) << 8) | (r | 0);\r\n                this.DrawPixel(x, y, finalColor);\r\n\r\n                // 累加颜色值\r\n                r += rStep;\r\n                g += gStep;\r\n                b += bStep;\r\n                a += aStep;\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 投影相关\r\n\r\n    // 将视口上的内容映射到实际屏幕上\r\n    public ViewportToCanvas(point: Vector2) {\r\n        // 假设视口宽度为1个单位\r\n        // 因为aspectRatio = canvasWidth / canvasHeight，\r\n        // 所以视口高度 = 1 / aspectRatio = canvasHeight / canvasWidth\r\n        const viewportWidth = 1;\r\n        const viewportHeight = 1 / EngineConfig.aspectRatio;\r\n\r\n        // 将投影坐标映射到Canvas像素坐标\r\n        // X坐标：从 [-viewportWidth/2, viewportWidth/2] 映射到 [0, canvasWidth]\r\n        // Y坐标：从 [-viewportHeight/2, viewportHeight/2] 映射到 [0, canvasHeight] (注意Y轴方向)\r\n        const canvasX = ((point.x + viewportWidth / 2) / viewportWidth) * EngineConfig.canvasWidth;\r\n        const canvasY = EngineConfig.canvasHeight - (((point.y + viewportHeight / 2) / viewportHeight) * EngineConfig.canvasHeight); // Canvas的Y轴通常是向下的\r\n        point.x = canvasX;\r\n        point.y = canvasY;\r\n    }\r\n\r\n    // 透视投影，将3D场景的坐标转换为2D屏幕坐标，投射到视口上\r\n    public ProjectVertex(vertex: Vector3): Vector2 {\r\n        // 假设视点到近裁面（视口）的距离是d，视口的宽是1\r\n        // 根据三角函数有：tan(fov/2) = (0.5 / d)\r\n        // 所以：d = 0.5 / tan(fov/2)\r\n        const fovDegrees = 60;\r\n        const fovRadians = fovDegrees * (Math.PI / 180); // 将角度转换为弧度\r\n        const d = 0.5 / Math.tan(fovRadians / 2);\r\n\r\n        // 透视公式，假设视点位置(0,0)，视点到视口距离为d，场景里的点为P(x,y,z)，投射到视口上的点为P'(x,y)\r\n        // 则根据相似三角形有：z / d = x / x' = y / y'，可得到：\r\n        // x' = (d * x) / z\r\n        // y' = (d * y) / z\r\n        const projectionX = (d * vertex.x) / vertex.z;\r\n        const projectionY = (d * vertex.y) / vertex.z;\r\n\r\n        return new Vector2(projectionX, projectionY);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 变换\r\n\r\n    // 将模型空间坐标转换为裁剪空间坐标（Clip Space）\r\n    public ObjectToClipPos(vertex: Vector3, transform: Transform): Vector4 {\r\n        // 对顶点应用 MVP 矩阵（Model→View→Projection 矩阵的组合），计算过程为：\r\n        // 裁剪空间坐标 = projectionMatrix × viewMatrix × modelMatrix × 模型空间顶点\r\n        const modelMatrix = transform.localToWorldMatrix;\r\n        const camera = Camera.mainCamera;\r\n        const viewMatrix = camera.getViewMatrix();\r\n        const projectionMatrix = camera.getProjectionMatrix();\r\n        const mvpMatrix = projectionMatrix.multiply(viewMatrix).multiply(modelMatrix);\r\n        // 构建一个先朝摄影机反方向移动，再反方向旋转的矩阵，其实得到的也就是上面摄影机的世界坐标矩阵\r\n        // const cameraForward = camera.transform.forward;\r\n        // const cameraUp = camera.transform.up;\r\n        // const modelViewMatrix = modelMatrix.clone().transformToLookAtSpace(camera.transform.position, camera.transform.position.add(cameraForward), cameraUp);\r\n        // const mvpMatrix = modelViewMatrix.perspective(camera.fov, camera.aspect, camera.nearClip, camera.farClip);\r\n        return mvpMatrix.multiplyVector4(new Vector4(vertex, 1));\r\n    }\r\n\r\n    // 将裁剪空间坐标最终转换为屏幕空间坐标（Screen Space）\r\n    public ClipToScreenPos(vertex: Vector4): Vector3 {\r\n        // 执行透视除法：(x/w, y/w, z/w)，得到归一化设备坐标（NDC，范围 [-1, 1]）。\r\n        const w = vertex.w;\r\n        const ndcX = vertex.x / w;\r\n        const ndcY = vertex.y / w;\r\n        const ndcZ = vertex.z / w;\r\n\r\n        // 经过透视除法后，坐标位于标准设备坐标（NDC）空间，通常x, y, z范围在[-1, 1]（OpenGL风格）或[0, 1]（DirectX风格）之间。\r\n        // 将 NDC 转换为屏幕像素坐标：\r\n        // X 轴：screenX = (xNDC + 1) * 屏幕宽度 / 2\r\n        // Y 轴：screenY = (1 - yNDC) * 屏幕高度 / 2（注意 Y 轴翻转，因屏幕坐标系 Y 向下）\r\n\r\n        // 将NDC的x从[-1, 1]映射到[0, screenWidth]\r\n        const screenX = ((ndcX + 1) / 2) * EngineConfig.canvasWidth;\r\n        // 将NDC的y从[-1, 1]映射到[0, screenHeight]。注意屏幕坐标通常y向下为正，而NDC的y向上为正，所以需要翻转\r\n        const screenY = ((1 - ndcY) / 2) * EngineConfig.canvasHeight;\r\n\r\n        // z分量通常用于深度测试\r\n        const screenZ = (ndcZ + 1) / 2;\r\n\r\n        return new Vector3(screenX, screenY, screenZ);\r\n    }\r\n\r\n    public ObjectToScreenPos(vertex: Vector3, transform: Transform): Vector3 {\r\n        const clipPos = this.ObjectToClipPos(vertex, transform);\r\n        return this.ClipToScreenPos(clipPos);\r\n    }\r\n\r\n    public ObjectToWorldNormal(normal: Vector3, transform: Transform): Vector3 {\r\n        // 获取模型矩阵（局部到世界空间的变换矩阵）\r\n        const modelMatrix = transform.localToWorldMatrix;\r\n\r\n        // 计算模型矩阵的逆转置矩阵\r\n        // 逆转置矩阵可以确保法线在非均匀缩放时仍然保持与表面垂直\r\n        const inverseTransposeModel = modelMatrix.clone().invert().transpose();\r\n\r\n        // 使用逆转置矩阵变换法线向量（忽略平移分量，只应用旋转和缩放的逆变换）\r\n        const worldNormal = inverseTransposeModel.multiplyVector3(normal);\r\n\r\n        // 归一化结果，确保法线保持单位长度\r\n        return worldNormal.normalize();\r\n    }\r\n\r\n    /*\r\n     * 顶点处理阶段：模型空间 →（模型矩阵阵）→ 世界空间 →（视图矩阵）→ 观察空间 →（投影矩阵）→ 裁剪空间 →（透视除法）→ NDC 空间 →（视口变换）→ 屏幕空间 → 光栅化渲染\r\n     */\r\n    public VertexProcessingStage(vertices: Vector3[], transform: Transform) {\r\n        const outVertices = new Array(vertices.length);\r\n\r\n        // 1. MVP变换到裁剪空间\r\n        // 模型空间 -> 世界空间 -> 观察空间 -> 裁剪空间\r\n        // 2. 透视除法：将裁剪空间坐标转换为标准设备坐标（NDC）\r\n        // 裁剪空间 -> 标准化设备坐标（NDC 空间）\r\n        // 3. 视口变换：将NDC坐标映射到屏幕坐标\r\n        // 标准化设备坐标（NDC 空间） -> 屏幕空间\r\n        for (let i = 0; i < vertices.length; i += 1) {\r\n            outVertices[i] = this.ObjectToScreenPos(vertices[i], transform);\r\n        }\r\n\r\n        return outVertices;\r\n    }\r\n\r\n    /*\r\n     * 简单变换阶段：没有通过矩阵计算，而是简单的相似三角形原理，三角函数算出MVP变换跟屏幕映射，理解起来比较简单，但每个顶点都经过从头到尾的计算，比较耗性能\r\n     */\r\n    public EasyVertexProcessingStage(vertices: Vector3[], transform: Transform) {\r\n        const clipSpaceVertices = new Array(vertices.length);\r\n\r\n        // 简单变换\r\n        for (let i = 0; i < vertices.length; i += 1) {\r\n            let vertice = vertices[i].clone();\r\n            // 先变换，必须严格按照先缩放，再旋转，再平移\r\n            this.ScaleVertex(vertice, transform);\r\n            this.RotateVertex(vertice, transform);\r\n            this.TranslateVertex(vertice, transform);\r\n            // 再投影\r\n            clipSpaceVertices[i] = this.ProjectVertex(vertice);\r\n            // 再视口映射\r\n            this.ViewportToCanvas(clipSpaceVertices[i]);\r\n        }\r\n\r\n        return clipSpaceVertices;\r\n    }\r\n\r\n    public ScaleVertex(vertex: Vector3, transform: Transform) {\r\n        vertex.x *= transform.scale.x;\r\n        vertex.y *= transform.scale.y;\r\n        vertex.z *= transform.scale.z;\r\n    }\r\n\r\n    public RotateVertex(vertex: Vector3, transform: Transform) {\r\n        const eulerAngles = transform.rotation.eulerAngles;\r\n\r\n        const cosX = Math.cos(eulerAngles.x);\r\n        const sinX = Math.sin(eulerAngles.x);\r\n        const cosY = Math.cos(eulerAngles.y);\r\n        const sinY = Math.sin(eulerAngles.y);\r\n        const cosZ = Math.cos(eulerAngles.z);\r\n        const sinZ = Math.sin(eulerAngles.z);\r\n        // 先绕Z轴旋转\r\n        const x = vertex.x * cosZ - vertex.y * sinZ;\r\n        const y = vertex.x * sinZ + vertex.y * cosZ;\r\n        vertex.x = x;\r\n        vertex.y = y;\r\n        // 再绕Y轴旋转\r\n        const z = vertex.z * cosY - vertex.x * sinY;\r\n        const x2 = vertex.z * sinY + vertex.x * cosY;\r\n        vertex.z = z;\r\n        vertex.x = x2;\r\n        // 最后绕X轴旋转\r\n        const y2 = vertex.y * cosX - vertex.z * sinX;\r\n        const z2 = vertex.y * sinX + vertex.z * cosX;\r\n        vertex.y = y2;\r\n        vertex.z = z2;\r\n    }\r\n\r\n    public TranslateVertex(vertex: Vector3, transform: Transform) {\r\n        vertex.x += transform.position.x;\r\n        vertex.y += transform.position.y;\r\n        vertex.z += transform.position.z;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 剔除裁剪\r\n\r\n    // 视锥体剔除\r\n    public FrustumCulling() {\r\n\r\n    }\r\n\r\n    // 背面剔除\r\n    public BackfaceCulling(triangles: number[], mesh: Mesh, renderer: Renderer) {\r\n        const visibleTriangles: number[] = [];\r\n        const faceNormals = mesh.faceNormals;\r\n        const modelMatrix = renderer.transform.localToWorldMatrix;\r\n        const camera = Camera.mainCamera;\r\n\r\n        // 1. 计算模型视图矩阵（模型空间 → 视图空间）\r\n        const viewMatrix = camera.getViewMatrix(); // 获取相机的视图矩阵（世界空间 → 视图空间）\r\n        const modelViewMatrix = viewMatrix.multiply(modelMatrix); // 模型空间 → 世界空间 → 视图空间\r\n\r\n        // 2. 计算法向量变换矩阵（模型视图矩阵的逆转置）\r\n        const normalMatrix = modelViewMatrix.clone().invert().transpose();\r\n\r\n        // 3. 视图空间中的相机观察方向（右手坐标系的话，Z轴指向观察者，即相机应该是看向Z轴负轴）\r\n        const cameraViewDirection = Vector3.BACK;\r\n\r\n        for (let i = 0; i < faceNormals.length; i++) {\r\n            const n = 10;//Camera.mainCamera.counter % 12;\r\n            //if (i !== n) continue;\r\n\r\n            // 原始法向量（模型空间）\r\n            const normalModel = faceNormals[i];\r\n\r\n            // 4. 将法向量从模型空间变换到视图空间\r\n            const normalView = normalMatrix.multiplyVector3(normalModel);\r\n\r\n            // 5. 计算法向量与观察方向的点积\r\n            const dot = normalView.dot(cameraViewDirection);\r\n\r\n            // 6. 点积 > 0 表示面向相机（可见）\r\n            if (dot > 0) {\r\n                visibleTriangles.push(\r\n                    triangles[i * 3],\r\n                    triangles[i * 3 + 1],\r\n                    triangles[i * 3 + 2]\r\n                );\r\n            }\r\n        }\r\n\r\n        return visibleTriangles;\r\n    }\r\n\r\n    // 遮挡剔除\r\n    public OcclusionCulling() {\r\n\r\n    }\r\n\r\n    public ClipTriangle(triangle: Vector3[]) {\r\n\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 绘制物体\r\n\r\n    public DrawObject(renderer: Renderer) {\r\n        const mesh = (renderer as MeshRenderer).mesh;\r\n        if (!mesh) {\r\n            return;\r\n        }\r\n\r\n        let triangles = mesh.triangles;\r\n\r\n        // 1.剔除\r\n        this.FrustumCulling();\r\n        triangles = this.BackfaceCulling(triangles, mesh, renderer);\r\n        this.OcclusionCulling();\r\n\r\n        // 2.变换\r\n        // MVP变换\r\n        const screenVertices = this.VertexProcessingStage(mesh.vertices, renderer.transform);\r\n        // 简单MVP变换\r\n        // const screenVertices = this.EasyVertexProcessingStage(obj);\r\n\r\n        // 3.裁剪\r\n\r\n        // 4.光栅化与像素绘画\r\n        // 最后绘制三角形到屏幕上\r\n        for (let i = 0; i < triangles.length; i += 3) {\r\n            const p1 = screenVertices[triangles[i]];\r\n            const p2 = screenVertices[triangles[i + 1]];\r\n            const p3 = screenVertices[triangles[i + 2]];\r\n\r\n            if (this.drawMode & DrawMode.Wireframe) {\r\n                this.DrawTriangle(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, Color.WHITE);\r\n            }\r\n            if (this.drawMode & DrawMode.Point) {\r\n                this.DrawPixel(p1.x, p1.y, Color.WHITE);\r\n                this.DrawPixel(p2.x, p2.y, Color.WHITE);\r\n                this.DrawPixel(p3.x, p3.y, Color.WHITE);\r\n            }\r\n            if (this.drawMode & DrawMode.UV) {\r\n                const p1_uv = mesh.uv[triangles[i]];\r\n                const p2_uv = mesh.uv[triangles[i + 1]];\r\n                const p3_uv = mesh.uv[triangles[i + 2]];\r\n                const p1_color = new Color(p1_uv.x * 255, p1_uv.y * 255, 0).ToUint32();\r\n                const p2_color = new Color(p2_uv.x * 255, p2_uv.y * 255, 0).ToUint32();\r\n                const p3_color = new Color(p3_uv.x * 255, p3_uv.y * 255, 0).ToUint32();\r\n                this.DrawTriangleFilledWithVertexColor(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p1_color, p2_color, p3_color);\r\n            }\r\n            if (this.drawMode & DrawMode.Normal) {\r\n                const p1_normal = this.ObjectToWorldNormal(mesh.normals[triangles[i]], renderer.transform);\r\n                const p2_normal = this.ObjectToWorldNormal(mesh.normals[triangles[i + 1]], renderer.transform);\r\n                const p3_normal = this.ObjectToWorldNormal(mesh.normals[triangles[i + 2]], renderer.transform);\r\n                // 将法线分量从 [-1, 1] 映射到 [0, 255]\r\n                let r = Math.floor((p1_normal.x + 1) * 0.5 * 255);\r\n                let g = Math.floor((p1_normal.y + 1) * 0.5 * 255);\r\n                let b = Math.floor((p1_normal.z + 1) * 0.5 * 255);\r\n                const p1_color = new Color(r, g, b).ToUint32();\r\n                r = Math.floor((p2_normal.x + 1) * 0.5 * 255);\r\n                g = Math.floor((p2_normal.y + 1) * 0.5 * 255);\r\n                b = Math.floor((p2_normal.z + 1) * 0.5 * 255);\r\n                const p2_color = new Color(r, g, b).ToUint32();\r\n                r = Math.floor((p3_normal.x + 1) * 0.5 * 255);\r\n                g = Math.floor((p3_normal.y + 1) * 0.5 * 255);\r\n                b = Math.floor((p3_normal.z + 1) * 0.5 * 255);\r\n                const p3_color = new Color(r, g, b).ToUint32();\r\n                this.DrawTriangleFilledWithVertexColor(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p1_color, p2_color, p3_color);\r\n            }\r\n            if (this.drawMode & DrawMode.Shader) {\r\n                this.DrawTriangleFilled(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, Color.WHITE);\r\n            }\r\n        }\r\n\r\n        // 调试：绘制面法线\r\n        // for (let i = 0; i < mesh._debug_faceNormalLine.length; i++) {\r\n        //     const normal = mesh._debug_faceNormalLine[i];\r\n        //     const start = this.ObjectToScreenPos(normal.start, renderer.transform);\r\n        //     const end = this.ObjectToScreenPos(normal.end, renderer.transform);\r\n        //     this.DrawLine(start.x, start.y, end.x, end.y, Color.RED, Color.GREEN);\r\n        // }\r\n\r\n        // 绘制包围盒\r\n        for (let i = 0; i < mesh.bounds.length; i++) {\r\n            const bound = mesh.bounds[i];\r\n            const min = bound.min;\r\n            const max = bound.max;\r\n\r\n            // 计算包围盒的8个顶点\r\n            const vertices = [\r\n                { x: min.x, y: min.y, z: min.z }, // 左下后\r\n                { x: max.x, y: min.y, z: min.z }, // 右下后\r\n                { x: max.x, y: max.y, z: min.z }, // 右上后\r\n                { x: min.x, y: max.y, z: min.z }, // 左上后\r\n                { x: min.x, y: min.y, z: max.z }, // 左下前\r\n                { x: max.x, y: min.y, z: max.z }, // 右下前\r\n                { x: max.x, y: max.y, z: max.z }, // 右上前\r\n                { x: min.x, y: max.y, z: max.z }  // 左上前\r\n            ];\r\n\r\n            // 将所有顶点转换到屏幕空间\r\n            const screenVertices = vertices.map(v =>\r\n                this.ObjectToScreenPos(new Vector3(v.x, v.y, v.z), renderer.transform)\r\n            );\r\n\r\n            // 定义12条边的顶点索引对 (每个面4条边，共6个面，但共享边只画一次)\r\n            const edges = [\r\n                [0, 1], [1, 2], [2, 3], [3, 0], // 后面\r\n                [4, 5], [5, 6], [6, 7], [7, 4], // 前面\r\n                [0, 4], [1, 5], [2, 6], [3, 7]  // 连接前后的边\r\n            ];\r\n\r\n            // 绘制所有边\r\n            edges.forEach(([i1, i2]) => {\r\n                const v1 = screenVertices[i1];\r\n                const v2 = screenVertices[i2];\r\n                // 确保转换后的顶点有效\r\n                if (v1 && v2 && !isNaN(v1.x) && !isNaN(v1.y) && !isNaN(v2.x) && !isNaN(v2.y)) {\r\n                    this.DrawLine(v1.x, v1.y, v2.x, v2.y, Color.WHITE);\r\n                }\r\n            });\r\n\r\n            // 绘制中心点\r\n            const center = bound.getCenter();\r\n            const screenCenter = this.ObjectToScreenPos(center, renderer.transform);\r\n            if (screenCenter) {\r\n                // 绘制一个小十字作为中心点标记\r\n                const size = 5;\r\n                this.DrawLine(\r\n                    screenCenter.x - size, screenCenter.y,\r\n                    screenCenter.x + size, screenCenter.y,\r\n                    Color.RED\r\n                );\r\n                this.DrawLine(\r\n                    screenCenter.x, screenCenter.y - size,\r\n                    screenCenter.x, screenCenter.y + size,\r\n                    Color.RED\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 工具函数\r\n\r\n    /// <summary>\r\n    /// 线性插值\r\n    /// 传入2个点，返回它们组成线段的插值。\r\n    /// 要求：\r\n    /// 1. 要先算出直线偏水平还是垂直，如果是偏水平（斜率小于1），则以x为循环，传入顺序是(x1,y1,x2,y2)，反之如果直线偏垂直，则是(y1,x1,y2,x2)\r\n    /// 2. 同时要确保线段点的方向是从左往右或从上往下，例如线段是偏水平的话，要确保x2>x1，如果是偏垂直的话，要确保y2>y1\r\n    /// 举个例子：\r\n    /// 点(0, 0)和(2,1)，传入的参数是(0, 0, 2, 1)，返回的是((2-0)+1=3)个值，这些值是从(0-1)中间插值的，即(0, 0.5, 1)\r\n    /// </summary>\r\n    private Interpolate(a1: number, b1: number, a2: number, b2: number): number[] {\r\n        // 预分配数组大小以避免动态扩容\r\n        // const dx = Math.abs(Math.floor(a2 - a1));\r\n        const dx = ((a2 > a1 ? a2 - a1 : a1 - a2) | 0);\r\n        const value = new Array(dx + 1);\r\n        const a = (b2 - b1) / (a2 - a1);\r\n        let d = b1;\r\n\r\n        for (let i = 0; i <= dx; i++) {\r\n            value[i] = d;\r\n            d += a;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 颜色插值辅助函数\r\n     * @param color1 起始颜色 (32位整数，格式为0xAARRGGBB)\r\n     * @param color2 结束颜色 (32位整数，格式为0xAARRGGBB)\r\n     * @param t 插值因子 (0 到 1)\r\n     * @returns 插值后的颜色\r\n     */\r\n    private interpolateColor(color1: number, color2: number, t: number): number {\r\n        // 提取ARGB分量\r\n        const a1 = (color1 >> 24) & 0xFF;\r\n        const r1 = (color1 >> 16) & 0xFF;\r\n        const g1 = (color1 >> 8) & 0xFF;\r\n        const b1 = color1 & 0xFF;\r\n\r\n        const a2 = (color2 >> 24) & 0xFF;\r\n        const r2 = (color2 >> 16) & 0xFF;\r\n        const g2 = (color2 >> 8) & 0xFF;\r\n        const b2 = color2 & 0xFF;\r\n\r\n        // 线性插值每个分量\r\n        const a = Math.round(a1 + (a2 - a1) * t);\r\n        const r = Math.round(r1 + (r2 - r1) * t);\r\n        const g = Math.round(g1 + (g2 - g1) * t);\r\n        const b = Math.round(b1 + (b2 - b1) * t);\r\n\r\n        // 组合成32位颜色值\r\n        return (a << 24) | (r << 16) | (g << 8) | b;\r\n    }\r\n\r\n    //#endregion\r\n}","import { Camera } from \"../Component/Camera\";\r\nimport { CameraController } from \"../Component/CameraController\";\r\nimport { MeshRenderer } from \"../Component/MeshRenderer\";\r\nimport { ObjRotate } from \"../Component/ObjRotate\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { Quaternion } from \"../Math/Quaternion\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { AssetLoader } from \"../Utils/AssetLoader\";\r\nimport { Scene } from \"./Scene\";\r\n\r\nexport const MainScene = {\r\n    name: \"MainScene\",\r\n    initfun: (scene: Scene) => {\r\n        // 相机\r\n        const camera = new GameObject(\"camera\");\r\n        camera.transform.rotation = new Quaternion(new Vector3(0, 180, 0));\r\n        camera.transform.position = new Vector3(0, 0, 3);\r\n        scene.addGameObject(camera);\r\n        camera.addComponent(Camera);\r\n        camera.addComponent(CameraController);\r\n\r\n        // AssetLoader.loadModel('resources/female02/female02.obj', 0.01).then((model) => {\r\n        //     const obj = new GameObject(\"female02\");\r\n        //     const renderer = obj.addComponent(MeshRenderer);\r\n        //     renderer.mesh = model;\r\n        //     obj.addComponent(ObjRotate);\r\n        //     scene.addGameObject(obj);\r\n        // });\r\n\r\n        AssetLoader.loadModel('resources/cube.obj').then((model) => {\r\n            const obj = new GameObject(\"cube\");\r\n            //obj.transform.position = Vector3.BACK;\r\n            obj.addComponent(ObjRotate);\r\n            const renderer = obj.addComponent(MeshRenderer);\r\n            renderer.mesh = model;\r\n            //cube.transform.setParent(obj.transform, false);\r\n            scene.addGameObject(obj);\r\n        });\r\n\r\n        AssetLoader.loadModel('resources/models/bunny2.obj', 10).then((model) => {\r\n            const obj = new GameObject(\"bunny\");\r\n            const renderer = obj.addComponent(MeshRenderer);\r\n            renderer.mesh = model;\r\n            scene.addGameObject(obj);\r\n        });\r\n\r\n        // AssetLoader.loadModel('resources/assets/meshes/lee.obj').then((model) => {\r\n        //     const obj = new GameObject(\"lee\");\r\n        //     const renderer = obj.addComponent(MeshRenderer);\r\n        //     renderer.mesh = model;\r\n        //     scene.addGameObject(obj);\r\n        // });\r\n    }\r\n}","import { GameObject } from \"../Core/GameObject\";\r\n\r\nexport class Scene {\r\n    public name: string;\r\n    private rootGameObjects: GameObject[] = [];\r\n    \r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n    \r\n    public addGameObject(gameObject: GameObject): void {\r\n        this.rootGameObjects.push(gameObject);\r\n    }\r\n    \r\n    public removeGameObject(gameObject: GameObject): void {\r\n        const index = this.rootGameObjects.indexOf(gameObject);\r\n        if (index !== -1) {\r\n            this.rootGameObjects.splice(index, 1);\r\n        }\r\n    }\r\n    \r\n    public getRootGameObjects(): GameObject[] {\r\n        return [...this.rootGameObjects];\r\n    }\r\n    \r\n    public update(): void {\r\n        // 更新所有根游戏对象及其子对象\r\n        for (const gameObject of this.rootGameObjects) {\r\n            gameObject.startComponents();\r\n            gameObject.updateComponents();\r\n        }\r\n    }\r\n}","import { Scene } from \"./Scene\";\r\n\r\nexport class SceneManager {\r\n    private scenes: Map<string, Scene> = new Map<string, Scene>();\r\n    private activeScene: Scene | null = null;\r\n\r\n    public createScene(name: string): Scene {\r\n        const scene = new Scene(name);\r\n        this.scenes.set(name, scene);\r\n        return scene;\r\n    }\r\n\r\n    public getScene(name: string): Scene | undefined {\r\n        return this.scenes.get(name);\r\n    }\r\n\r\n    public setActiveScene(scene: Scene | string): void {\r\n        if (typeof scene === 'string') {\r\n            const foundScene = this.scenes.get(scene);\r\n            if (foundScene) {\r\n                this.activeScene = foundScene;\r\n            }\r\n        } else {\r\n            this.activeScene = scene;\r\n        }\r\n    }\r\n\r\n    public getActiveScene(): Scene | null {\r\n        return this.activeScene;\r\n    }\r\n\r\n    public updateActiveScene(): void {\r\n        if (this.activeScene) {\r\n            this.activeScene.update();\r\n        }\r\n    }\r\n\r\n    public loadScene(data: any) {\r\n        if (!data.name || !data.initfun) {\r\n            return;\r\n        }\r\n\r\n        // 初始化场景\r\n        const mainScene = this.createScene(data.name);\r\n        data.initfun(mainScene);\r\n        this.setActiveScene(mainScene);\r\n    }\r\n}","import { Mesh } from \"../Renderer/Mesh\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { OBJParser } from \"./ObjParser\";\r\n\r\nexport class AssetLoader {\r\n    private static fileCache: Dictionary = new Dictionary();\r\n\r\n    public static loadImageFile(fileName: string): Promise<HTMLImageElement> {\r\n        return new Promise<HTMLImageElement>((resolve) => {\r\n\r\n            if (AssetLoader.fileCache.has(fileName)) {\r\n                resolve(AssetLoader.fileCache.get(fileName));\r\n            } else {\r\n                var image = new Image();\r\n                if (!image) {\r\n                    console.error('Failed to create the image object');\r\n                    return;\r\n                }\r\n\r\n                // Register the event handler to be called on loading an image\r\n                image.onload = function () {\r\n                    AssetLoader.fileCache.set(fileName, image);\r\n                    resolve(image);\r\n                };\r\n\r\n                // 跨区请求\r\n                image.crossOrigin = \"\";\r\n\r\n                // Tell the browser to load an image\r\n                image.src = fileName;\r\n            }\r\n        });\r\n    }\r\n\r\n    public static loadTextFile(fileName: string): Promise<string> {\r\n        return new Promise<string>(function (resolve) {\r\n\r\n            if (AssetLoader.fileCache.has(fileName)) {\r\n                resolve(AssetLoader.fileCache.get(fileName));\r\n            }\r\n            else {\r\n                var request = new XMLHttpRequest();\r\n\r\n                request.onreadystatechange = function () {\r\n                    if (request.readyState === 4) {\r\n                        if (request.status === 200) {\r\n                            AssetLoader.fileCache.set(fileName, request.responseText);\r\n                            resolve(request.responseText);\r\n                        }\r\n                        else {\r\n                            resolve(\"\");\r\n                        }\r\n                    }\r\n                };\r\n\r\n                //这里不要开启异步，设置为false，否则容易卡在readyState = 1，原因不明\r\n                request.open(\"GET\", fileName, false);\r\n                request.send();\r\n            }\r\n        });\r\n    }\r\n\r\n    public static async loadModel(modelPath: string, scale: number = 1): Promise<Mesh | null> {\r\n        let model: Mesh | null = null;\r\n        var objDoc = await AssetLoader.loadTextFile(modelPath);\r\n        if (objDoc != null) {\r\n            model = OBJParser.parse(objDoc, scale);\r\n        }\r\n        return model;\r\n    }\r\n}","export class Color {\r\n    public static readonly WHITE = new Color(255, 255, 255).ToUint32();\r\n    public static readonly BLACK = new Color(0, 0, 0).ToUint32();\r\n    public static readonly GRAY = new Color(128, 128, 128).ToUint32();\r\n    public static readonly RED = new Color(255, 0, 0).ToUint32();\r\n    public static readonly GREEN = new Color(0, 255, 0).ToUint32();\r\n    public static readonly BLUE = new Color(0, 0, 255).ToUint32();\r\n    public static readonly YELLOW = new Color(255, 255, 0).ToUint32();\r\n    public static readonly CYAN = new Color(0, 255, 255).ToUint32();\r\n    public static readonly MAGENTA = new Color(255, 0, 255).ToUint32();\r\n    public static readonly ORANGE = new Color(255, 165, 0).ToUint32();\r\n    public static readonly PURPLE = new Color(128, 0, 128).ToUint32();\r\n\r\n    public r: number;\r\n    public g: number;\r\n    public b: number;\r\n    public a: number;\r\n\r\n    constructor(r: number, g: number, b: number, a: number = 255) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    public ToUint32() {\r\n        return (this.a << 24) | (this.b << 16) | (this.g << 8) | this.r;\r\n    }\r\n\r\n    public static FromUint32(uint32: number) {\r\n        return new Color(\r\n            uint32 & 0xFF,\r\n            (uint32 >> 8) & 0xFF,\r\n            (uint32 >> 16) & 0xFF,\r\n            (uint32 >> 24) & 0xFF\r\n        );\r\n    }\r\n}","export class Dictionary {\r\n  // 关键修复：添加索引签名 { [key: string]: any }，允许用 string 类型索引\r\n  items: { [key: string]: any } = {}; // 直接初始化，避免“未赋值”隐患\r\n\r\n  constructor() {\r\n    // 无需重复赋值，已在声明时初始化\r\n  }\r\n\r\n  get count(): number {\r\n    return Object.keys(this.items).length;\r\n  }\r\n\r\n  // 键类型统一为 string（更符合对象索引的实际场景）\r\n  has(key: string): boolean {\r\n    // 推荐用 Object.prototype.hasOwnProperty，避免原型链污染\r\n    return Object.prototype.hasOwnProperty.call(this.items, key);\r\n  }\r\n\r\n  set(key: string, val: any): void {\r\n    this.items[key] = val; // 现在 TS 能识别 key 是合法索引\r\n  }\r\n\r\n  // 修复逻辑：删除成功返回 true\r\n  delete(key: string): boolean {\r\n    if (this.has(key)) {\r\n      delete this.items[key];\r\n      return true; // 关键修正：删除成功返回 true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get(key: string): any {\r\n    return this.has(key) ? this.items[key] : undefined;\r\n  }\r\n\r\n  clear(): void {\r\n    this.items = {};\r\n  }\r\n\r\n  values(): any[] {\r\n    let values: any[] = [];\r\n    for (let k in this.items) {\r\n      if (this.has(k)) {\r\n        values.push(this.items[k]);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  // 关键修复：定义 fun 的类型（key 为 string，val 为 any）\r\n  forEach(fun: (key: string, value: any) => void): void {\r\n    for (let k in this.items) {\r\n      if (this.has(k)) {\r\n        fun(k, this.items[k]);\r\n      }\r\n    }\r\n  }\r\n}","import { Engine } from \"../Core/Engine\";\r\n\r\nenum LogType {\r\n    Info,\r\n    Warning,\r\n    Error,\r\n}\r\n\r\ninterface ILog {\r\n    message: string;\r\n    type: LogType;\r\n    duration: number;\r\n}\r\n\r\nexport class Logger {\r\n    private static logs: ILog[] = [];\r\n\r\n    private static readonly logColors = {\r\n        [LogType.Info]: 'white',\r\n        [LogType.Warning]: 'orange',\r\n        [LogType.Error]: 'red'\r\n    };\r\n\r\n    static printLogs() {\r\n        for (let i = 0; i < this.logs.length; i++) {\r\n            const log = this.logs[i];\r\n            Engine.context.fillStyle = Logger.logColors[log.type];\r\n            Engine.context.fillText(log.message, 10, 20 + i * 15);\r\n        }\r\n        this.logs = [];\r\n    }\r\n\r\n    static log(message: string, duration?: number) {\r\n        this.push(message, LogType.Info, duration);\r\n    }\r\n\r\n    static warning(message: string, duration?: number) {\r\n        this.push(message, LogType.Warning, duration);\r\n    }\r\n\r\n    static error(message: string, duration?: number) {\r\n        this.push(message, LogType.Error, duration);\r\n    }\r\n\r\n    private static push(message: string, type: LogType, duration?: number) {\r\n        const log: ILog = {\r\n            message,\r\n            type,\r\n            duration: duration ?? 0,\r\n        }\r\n        this.logs.push(log);\r\n    }\r\n}","import { Line, Mesh } from \"../Renderer/Mesh\";\r\nimport { SubMesh } from \"../Renderer/Mesh\";\r\nimport { Vector2 } from \"../Math/Vector2\";\r\nimport { Vector3 } from \"../Math/Vector3\";\r\nimport { Vector4 } from \"../Math/Vector4\";\r\nimport { Bounds } from \"../Math/Bounds\";\r\n\r\nexport class OBJParser {\r\n    /**\r\n     * 解析OBJ文件内容并生成Mesh对象\r\n     * @param content OBJ文件的文本内容\r\n     * @param scale 模型缩放比例，默认1.0\r\n     * @returns 解析后的Mesh对象\r\n     */\r\n    static parse(content: string, scale: number = 1): Mesh {\r\n        const mesh = new Mesh();\r\n        mesh.vertices = [];\r\n        mesh.uv = [];\r\n        mesh.normals = [];\r\n        mesh.tangents = [];\r\n        mesh.triangles = [];\r\n        mesh.bounds = [];\r\n        mesh.subMeshes = [];\r\n        mesh.material = []; // 初始化材质数组\r\n\r\n        // 临时存储OBJ文件中的原始数据（索引从1开始）\r\n        const tempVertices: Vector3[] = [];\r\n        const tempUvs: Vector2[] = [];\r\n        const tempNormals: Vector3[] = [];\r\n\r\n        // 顶点索引映射表：用于去重 (格式: \"vIndex/vtIndex/vnIndex\" => 合并后的索引)\r\n        const vertexMap = new Map<string, number>();\r\n\r\n        // 材质相关变量\r\n        let currentMaterial = \"\"; // 当前使用的材质名称\r\n        const materialSet = new Set<string>(); // 用于收集所有唯一材质\r\n\r\n        // 按行分割内容并处理\r\n        const lines = content.split(/\\r?\\n/);\r\n        let currentSubMesh: SubMesh | null = null;\r\n\r\n        for (const line of lines) {\r\n            const trimmedLine = line.trim();\r\n            if (!trimmedLine || trimmedLine.startsWith('#')) {\r\n                continue; // 跳过空行和注释\r\n            }\r\n\r\n            const parts = trimmedLine.split(/\\s+/);\r\n            const type = parts[0];\r\n            const data = parts.slice(1);\r\n\r\n            switch (type) {\r\n                case 'v': // 顶点坐标 (x, y, z) - 应用缩放\r\n                    if (data.length >= 3) {\r\n                        tempVertices.push(new Vector3(\r\n                            parseFloat(data[0]) * scale,\r\n                            parseFloat(data[1]) * scale,\r\n                            parseFloat(data[2]) * scale\r\n                        ));\r\n                    }\r\n                    break;\r\n\r\n                case 'vt': // 纹理坐标 (u, v)\r\n                    if (data.length >= 2) {\r\n                        tempUvs.push(new Vector2(\r\n                            parseFloat(data[0]),\r\n                            1 - parseFloat(data[1]) // 翻转V轴\r\n                        ));\r\n                    }\r\n                    break;\r\n\r\n                case 'vn': // 法线 (x, y, z)\r\n                    if (data.length >= 3) {\r\n                        tempNormals.push(new Vector3(\r\n                            parseFloat(data[0]),\r\n                            parseFloat(data[1]),\r\n                            parseFloat(data[2])\r\n                        ));\r\n                    }\r\n                    break;\r\n\r\n                case 'mtllib': // 材质库引用（暂存材质库文件名，实际加载需额外实现）\r\n                    // 这里可以记录材质库文件路径，用于后续加载材质\r\n                    // 示例: const mtlPath = data.join(' ');\r\n                    break;\r\n\r\n                case 'usemtl': // 使用材质\r\n                    if (data.length > 0) {\r\n                        currentMaterial = data.join(' '); // 支持带空格的材质名\r\n                        materialSet.add(currentMaterial);\r\n\r\n                        if (currentSubMesh) {\r\n                            currentSubMesh.material = currentMaterial; // 关联材质\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 'g': // 处理组指令，创建新的子网格\r\n                    // 结算当前子网格\r\n                    if (currentSubMesh) {\r\n                        currentSubMesh.vertexCount = mesh.vertices.length - currentSubMesh.firstVertex;\r\n                        currentSubMesh.indexCount = mesh.triangles.length - currentSubMesh.indexStart;\r\n                    }\r\n                    // 创建新子网格并继承当前材质\r\n                    currentSubMesh = new SubMesh();\r\n                    currentSubMesh.firstVertex = mesh.vertices.length;\r\n                    currentSubMesh.indexStart = mesh.triangles.length;\r\n                    currentSubMesh.vertexCount = 0;\r\n                    currentSubMesh.indexCount = 0;\r\n                    currentSubMesh.bounds = new Bounds();\r\n                    currentSubMesh.material = currentMaterial; // 继承当前材质\r\n                    mesh.subMeshes.push(currentSubMesh);\r\n                    break;\r\n\r\n                case 'f': // 面\r\n                    if (data.length < 3) break;\r\n\r\n                    // 初始化当前子网格（如果没有）\r\n                    if (!currentSubMesh) {\r\n                        currentSubMesh = new SubMesh();\r\n                        currentSubMesh.firstVertex = mesh.vertices.length;\r\n                        currentSubMesh.indexStart = mesh.triangles.length;\r\n                        currentSubMesh.vertexCount = 0;\r\n                        currentSubMesh.indexCount = 0;\r\n                        currentSubMesh.bounds = new Bounds();\r\n                        currentSubMesh.material = currentMaterial; // 使用当前材质\r\n                        mesh.subMeshes.push(currentSubMesh);\r\n                    }\r\n\r\n                    // 处理面的顶点数据\r\n                    const faceVertices = data.map(vertexStr => {\r\n                        const indices = vertexStr.split('/').map(idx => parseInt(idx) || 0);\r\n                        return {\r\n                            v: indices[0] - 1, // 转换为0基索引\r\n                            vt: indices[1] - 1,\r\n                            vn: indices[2] - 1\r\n                        };\r\n                    });\r\n\r\n                    // 处理三角形化和顶点去重\r\n                    for (let i = 2; i < faceVertices.length; i++) {\r\n                        [0, i - 1, i].forEach(idx => {\r\n                            const { v, vt, vn } = faceVertices[idx];\r\n\r\n                            // 创建唯一标识键 (处理可能的负数索引和默认值)\r\n                            const key = `${v >= 0 ? v : -1}/${vt >= 0 ? vt : -1}/${vn >= 0 ? vn : -1}`;\r\n\r\n                            if (vertexMap.has(key)) {\r\n                                // 复用已存在的顶点索引\r\n                                mesh.triangles.push(vertexMap.get(key)!);\r\n                            } else {\r\n                                // 添加新顶点数据\r\n                                const newIndex = mesh.vertices.length;\r\n                                vertexMap.set(key, newIndex);\r\n\r\n                                // 顶点数据\r\n                                mesh.vertices.push(v >= 0 && v < tempVertices.length ? tempVertices[v] : new Vector3(0, 0, 0));\r\n\r\n                                // UV数据\r\n                                mesh.uv.push(vt >= 0 && vt < tempUvs.length ? tempUvs[vt] : new Vector2(0, 0));\r\n\r\n                                // 法线数据\r\n                                mesh.normals.push(vn >= 0 && vn < tempNormals.length ? tempNormals[vn] : new Vector3(0, 0, 1));\r\n\r\n                                // 先初始化切线为零向量，后续会计算\r\n                                mesh.tangents.push(new Vector4(0, 0, 0, 1));\r\n\r\n                                // 添加索引\r\n                                mesh.triangles.push(newIndex);\r\n                            }\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // 更新子网格信息\r\n        mesh.subMeshes.forEach(subMesh => {\r\n            subMesh.vertexCount = mesh.vertices.length - subMesh.firstVertex;\r\n            subMesh.indexCount = mesh.triangles.length - subMesh.indexStart;\r\n\r\n            // 计算子网格包围盒\r\n            const subVertices = mesh.vertices.slice(\r\n                subMesh.firstVertex,\r\n                subMesh.firstVertex + subMesh.vertexCount\r\n            );\r\n            subMesh.bounds = Bounds.fromPoints(subVertices);\r\n        });\r\n\r\n        // 收集所有材质到mesh.material数组\r\n        mesh.material = Array.from(materialSet);\r\n\r\n        // 计算切线向量\r\n        this.calculateTangents(mesh);\r\n\r\n        // 计算整体包围盒\r\n        mesh.bounds = mesh.subMeshes.map(sm => sm.bounds);\r\n\r\n        // 计算三角面的法向量\r\n        this.calculateFaceNormals(mesh);\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private static calculateFaceNormals(mesh: Mesh) {\r\n        if (mesh.vertices.length === 0 || mesh.triangles.length === 0) return;\r\n\r\n        mesh.faceNormals = [];\r\n        mesh._debug_faceNormalLine = [];\r\n\r\n        for (let i = 0; i < mesh.triangles.length; i += 3) {\r\n            const i0 = mesh.triangles[i];\r\n            const i1 = mesh.triangles[i + 1];\r\n            const i2 = mesh.triangles[i + 2];\r\n\r\n            const v0 = mesh.vertices[i0];\r\n            const v1 = mesh.vertices[i1];\r\n            const v2 = mesh.vertices[i2];\r\n\r\n            const e1 = Vector3.subtract(v1, v0);    \r\n            const e2 = Vector3.subtract(v2, v0);\r\n            const faceNormal = Vector3.cross(e1, e2).normalize();\r\n            mesh.faceNormals.push(faceNormal);\r\n\r\n            // 调试信息\r\n            const center = new Vector3(\r\n                (v0.x + v1.x + v2.x) / 3,\r\n                (v0.y + v1.y + v2.y) / 3,\r\n                (v0.z + v1.z + v2.z) / 3\r\n            );\r\n            const end = center.clone().add(faceNormal);\r\n            mesh._debug_faceNormalLine.push(new Line(center, end));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算网格的切线向量\r\n     * 基于顶点位置、UV和三角形索引计算\r\n     */\r\n    private static calculateTangents(mesh: Mesh) {\r\n        if (mesh.vertices.length === 0 || mesh.triangles.length === 0) return;\r\n\r\n        // 临时数组存储每个顶点的切线计算数据\r\n        const tan1 = new Array(mesh.vertices.length).fill(0).map(() => new Vector3(0, 0, 0));\r\n        const tan2 = new Array(mesh.vertices.length).fill(0).map(() => new Vector3(0, 0, 0));\r\n\r\n        // 遍历所有三角形\r\n        for (let i = 0; i < mesh.triangles.length; i += 3) {\r\n            const i0 = mesh.triangles[i];\r\n            const i1 = mesh.triangles[i + 1];\r\n            const i2 = mesh.triangles[i + 2];\r\n\r\n            // 获取三角形的三个顶点\r\n            const v0 = mesh.vertices[i0];\r\n            const v1 = mesh.vertices[i1];\r\n            const v2 = mesh.vertices[i2];\r\n\r\n            // 获取对应的UV坐标\r\n            const w0 = mesh.uv[i0];\r\n            const w1 = mesh.uv[i1];\r\n            const w2 = mesh.uv[i2];\r\n\r\n            // 计算边向量\r\n            const x1 = v1.x - v0.x;\r\n            const y1 = v1.y - v0.y;\r\n            const z1 = v1.z - v0.z;\r\n\r\n            const x2 = v2.x - v0.x;\r\n            const y2 = v2.y - v0.y;\r\n            const z2 = v2.z - v0.z;\r\n\r\n            // 计算UV差值\r\n            const s1 = w1.x - w0.x;\r\n            const t1 = w1.y - w0.y;\r\n            const s2 = w2.x - w0.x;\r\n            const t2 = w2.y - w0.y;\r\n\r\n            // 计算切线向量\r\n            const r = 1.0 / (s1 * t2 - s2 * t1);\r\n            const tx = (t2 * x1 - t1 * x2) * r;\r\n            const ty = (t2 * y1 - t1 * y2) * r;\r\n            const tz = (t2 * z1 - t1 * z2) * r;\r\n\r\n            // 累加切线数据\r\n            tan1[i0].x += tx;\r\n            tan1[i0].y += ty;\r\n            tan1[i0].z += tz;\r\n\r\n            tan1[i1].x += tx;\r\n            tan1[i1].y += ty;\r\n            tan1[i1].z += tz;\r\n\r\n            tan1[i2].x += tx;\r\n            tan1[i2].y += ty;\r\n            tan1[i2].z += tz;\r\n\r\n            // 计算副切线向量\r\n            const bx = (s1 * x2 - s2 * x1) * r;\r\n            const by = (s1 * y2 - s2 * y1) * r;\r\n            const bz = (s1 * z2 - s2 * z1) * r;\r\n\r\n            tan2[i0].x += bx;\r\n            tan2[i0].y += by;\r\n            tan2[i0].z += bz;\r\n\r\n            tan2[i1].x += bx;\r\n            tan2[i1].y += by;\r\n            tan2[i1].z += bz;\r\n\r\n            tan2[i2].x += bx;\r\n            tan2[i2].y += by;\r\n            tan2[i2].z += bz;\r\n        }\r\n\r\n        // 计算最终切线并规范化\r\n        for (let i = 0; i < mesh.vertices.length; i++) {\r\n            const n = mesh.normals[i];\r\n            const t = tan1[i];\r\n\r\n            // 正交化切线（Gram-Schmidt过程）\r\n            const tangent = Vector3.subtract(t, Vector3.multiply(n, Vector3.dot(n, t))).normalize();\r\n\r\n            // 计算切线方向（ handedness ）\r\n            const handedness = Vector3.dot(Vector3.cross(n, t), tan2[i]) < 0.0 ? -1 : 1;\r\n\r\n            // 存储切线（w分量表示方向）\r\n            mesh.tangents[i] = new Vector4(tangent.x, tangent.y, tangent.z, handedness);\r\n        }\r\n    }\r\n}","import { Engine } from \"./Core/Engine\";\r\n\r\n// 当DOM内容加载完成后执行\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // 初始化引擎\r\n    Engine.Init();\r\n\r\n    // 主循环\r\n    function mainLoop() {\r\n        Engine.Loop();\r\n        // 请求下一帧动画\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n    // 开始动画循环\r\n    requestAnimationFrame(mainLoop);\r\n});"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}